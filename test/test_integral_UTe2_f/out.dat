 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
omit a blank line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
<cfd> will be read from atom2020.cemat.in
Are you sure the basis need not to transform to natural basis from atomic basis!
self.norb:
 10
self.nmin:
 1
self.nmax:
 1
self.ncfgs:
 10
self.int_type:
 kanamori
self.int_val:
 {'U': 5.0, 'Up': 3.2, 'Jz': 0.9, 'Js': 0.9, 'Jp': 0.9}
self.soc_type:
 d
self.soc_val:
 0.2410105
self.soc_mat:
 [[ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j         -2.08721216e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.20872122j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   2.08721216e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.20872122j  0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          2.08721216e-01+0.j
   3.18751940e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.12050525j  0.00000000e+00+0.j
   0.00000000e+00+0.j         -1.20505250e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.12050525j]
 [-2.08721216e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j         -3.18751940e-18+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.12050525j
   1.20505250e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.12050525j  0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00-0.20872122j
   0.00000000e+00+0.12050525j  0.00000000e+00+0.j
   3.18751940e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.12050525j
   0.00000000e+00+0.j         -1.20505250e-01+0.j        ]
 [ 0.00000000e+00-0.20872122j  0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.12050525j
   0.00000000e+00+0.j         -3.18751940e-18+0.j
   0.00000000e+00-0.12050525j  0.00000000e+00+0.j
   1.20505250e-01+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          1.20505250e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.12050525j
   6.37503880e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.2410105j   0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
  -1.20505250e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.12050525j  0.00000000e+00+0.j
   0.00000000e+00+0.j         -6.37503880e-18+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.2410105j ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.12050525j
   0.00000000e+00+0.j          1.20505250e-01+0.j
   0.00000000e+00+0.2410105j   0.00000000e+00+0.j
   6.37503880e-18+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.12050525j  0.00000000e+00+0.j
  -1.20505250e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.2410105j
   0.00000000e+00+0.j         -6.37503880e-18+0.j        ]]
self.cfd_mat:
 [[13.1262055+0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j 13.1262055+0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j 13.06893  +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j 13.06893  +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
  13.1197795+0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j 13.1197795+0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j 13.0869435+0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j 13.0869435+0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
  13.0770505+0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j 13.0770505+0.j]]
self.onsite:
 [[13.1262055 +0.j          0.        +0.j          0.        +0.j
  -0.20872122+0.j          0.        +0.j          0.        +0.20872122j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j        ]
 [ 0.        +0.j         13.1262055 +0.j          0.20872122+0.j
   0.        +0.j          0.        +0.20872122j  0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j        ]
 [ 0.        +0.j          0.20872122+0.j         13.06893   +0.j
   0.        +0.j          0.        -0.12050525j  0.        +0.j
   0.        +0.j         -0.12050525+0.j          0.        +0.j
   0.        +0.12050525j]
 [-0.20872122+0.j          0.        +0.j          0.        +0.j
  13.06893   +0.j          0.        +0.j          0.        +0.12050525j
   0.12050525+0.j          0.        +0.j          0.        +0.12050525j
   0.        +0.j        ]
 [ 0.        +0.j          0.        -0.20872122j  0.        +0.12050525j
   0.        +0.j         13.1197795 +0.j          0.        +0.j
   0.        +0.j          0.        -0.12050525j  0.        +0.j
  -0.12050525+0.j        ]
 [ 0.        -0.20872122j  0.        +0.j          0.        +0.j
   0.        -0.12050525j  0.        +0.j         13.1197795 +0.j
   0.        -0.12050525j  0.        +0.j          0.12050525+0.j
   0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.12050525+0.j          0.        +0.j          0.        +0.12050525j
  13.0869435 +0.j          0.        +0.j          0.        -0.2410105j
   0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j         -0.12050525+0.j
   0.        +0.j          0.        +0.12050525j  0.        +0.j
   0.        +0.j         13.0869435 +0.j          0.        +0.j
   0.        +0.2410105j ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        -0.12050525j  0.        +0.j          0.12050525+0.j
   0.        +0.2410105j   0.        +0.j         13.0770505 +0.j
   0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        -0.12050525j
   0.        +0.j         -0.12050525+0.j          0.        +0.j
   0.        +0.j          0.        -0.2410105j   0.        +0.j
  13.0770505 +0.j        ]]
self.point_group:
 D2h
self.vpm_type:
 1
nstat=
 [  1  10  45 120 210 252 210 120  45  10   1]
basis:
 [  1   2   4   8  16  32  64 128 256 512]
----------
name_sc: D2h
pgid: 1
nrank: 16
nclass: None
mb_norb: None
rep_vec:
 [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])]
rep_spin:
 [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]])]
mb_shell:
 None
irreps:
 [<pg.read_IR_DSG.Irrep object at 0x2b093a33fef0>, <pg.read_IR_DSG.Irrep object at 0x2b093a33fe48>, <pg.read_IR_DSG.Irrep object at 0x2b093a349b00>, <pg.read_IR_DSG.Irrep object at 0x2b093a349a90>, <pg.read_IR_DSG.Irrep object at 0x2b093a349c50>, <pg.read_IR_DSG.Irrep object at 0x2b093a349cf8>, <pg.read_IR_DSG.Irrep object at 0x2b093a349ef0>, <pg.read_IR_DSG.Irrep object at 0x2b093a349470>, <pg.read_IR_DSG.Irrep object at 0x2b093a349f28>, <pg.read_IR_DSG.Irrep object at 0x2b093a3495c0>]
gen_pos:
 None
gen_mul:
 None
irreps_class:
 []
dim= 3
npower= 2
npoly= [3 1 1 2 1]
nfunc= 5
umat= [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])]
nop= 16
shell= d
func_o= {}
mapbasis= {}
vec_oldbasis= None
umat_new= []
su2= [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]])]
umat_so= []
mapbasis= {'200': 0, '110': 1, '020': 2, '101': 3, '011': 4, '002': 5}
vec_oldbasis= [[-1.          0.          0.          1.73205081  0.        ]
 [ 0.          0.          0.          0.          3.46410162]
 [-1.          0.          0.         -1.73205081  0.        ]
 [ 0.          3.46410162  0.          0.          0.        ]
 [ 0.          0.          3.46410162  0.          0.        ]
 [ 2.          0.          0.          0.          0.        ]]
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
nop:
 5
self.umat_new:
 (5, 5)
crystal_matrix:
 (10, 10)
Check for the symmetry of crystal : 8.881784197001252e-15
dim= 3
npower= 2
npoly= [3 1 1 2 1]
nfunc= 5
umat= [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])]
nop= 16
shell= d
func_o= {'struct': array([[[2, 0, 0],
        [0, 2, 0],
        [0, 0, 2]],

       [[1, 0, 1],
        [0, 0, 0],
        [0, 0, 0]],

       [[0, 1, 1],
        [0, 0, 0],
        [0, 0, 0]],

       [[2, 0, 0],
        [0, 2, 0],
        [0, 0, 0]],

       [[1, 1, 0],
        [0, 0, 0],
        [0, 0, 0]]], dtype=int32), 'coeff': array([[-1.        , -1.        ,  2.        ],
       [ 3.46410162,  0.        ,  0.        ],
       [ 3.46410162,  0.        ,  0.        ],
       [ 1.73205081, -1.73205081,  0.        ],
       [ 3.46410162,  0.        ,  0.        ]])}
mapbasis= {'200': 0, '110': 1, '020': 2, '101': 3, '011': 4, '002': 5}
vec_oldbasis= [[-1.          0.          0.          1.73205081  0.        ]
 [ 0.          0.          0.          0.          3.46410162]
 [-1.          0.          0.         -1.73205081  0.        ]
 [ 0.          3.46410162  0.          0.          0.        ]
 [ 0.          0.          3.46410162  0.          0.        ]
 [ 2.          0.          0.          0.          0.        ]]
umat_new= [array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]])]
su2= [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]])]
umat_so= [array([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 1.+0.j]]), array([[ 0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+1.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j, -0.+0.j,  1.-0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -1.+0.j, -0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -1.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j, -0.+0.j,  1.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -1.+0.j, -0.+0.j]]), array([[ 0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-1.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j, -0.+0.j,  0.+1.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.+1.j, -0.+0.j]]), array([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 1.+0.j]]), array([[ 0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+1.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j, -0.+0.j,  1.-0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -1.+0.j, -0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -1.+0.j,  0.+0.j, -0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j, -0.+0.j,  1.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -1.+0.j, -0.+0.j]]), array([[ 0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-1.j,  0.+0.j,  0.-0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j, -0.+0.j,  0.+1.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.+1.j, -0.+0.j]]), array([[-1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -1.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -1.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-1.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+1.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-1.j]]), array([[ 0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.+0.j, -1.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,  1.-0.j, -0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         1.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.+0.j, -1.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j,  1.-0.j, -0.+0.j]]), array([[ 0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+1.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.+0.j, -0.-1.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.-1.j, -0.+0.j]]), array([[-1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -1.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -1.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-1.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+1.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-1.j]]), array([[ 0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.+0.j, -1.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,  1.-0.j, -0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         1.+0.j,  0.+0.j,  0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.+0.j, -1.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j,  1.-0.j, -0.+0.j]]), array([[ 0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+1.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.+0.j, -0.-1.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j, -0.-1.j, -0.+0.j]])]
****************************************
* nocc =  1
basis1:
 [  1   2   4   8  16  32  64 128 256 512]
      ******************************
     * nop =  0
      ******************************
     * nop =  1
      ******************************
     * nop =  2
      ******************************
     * nop =  3
      ******************************
     * nop =  4
      ******************************
     * nop =  5
      ******************************
     * nop =  6
      ******************************
     * nop =  7
      ******************************
     * nop =  8
      ******************************
     * nop =  9
      ******************************
     * nop =  10
      ******************************
     * nop =  11
      ******************************
     * nop =  12
      ******************************
     * nop =  13
      ******************************
     * nop =  14
      ******************************
     * nop =  15
Check for the symmetry of hamiltonian : 4.4075854077618715e-14
>>>>> irrep : GM1+
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM1-
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM2+
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM2-
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM3+
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM3-
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM4+
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM4-
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM5d
multi success!
>>>>> multi : 5
** ** ** ** **  check for projectors matrix value : 
>>> Projectors  : {'Pcharacter': array([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 1.+0.j]]), 'Pquasi': array([[[ 0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j]],

       [[ 0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [-0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j,
          0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         -0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j],
        [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
          0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j]]]), 'P00': array([[ 0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j]]), 'P01': array([[0.+0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.-0.5j, 0.-0.5j, 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.-0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.-0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.-0.5j, 0.-0.5j, 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.5j, 0.+0.5j, 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.5j,
        0.+0.5j, 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.-0.5j,
        0.-0.5j, 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.5j, 0.-0.5j],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.5j, 0.-0.5j]]), 'P11': array([[ 0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [-0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0.5+0.j, -0.5+0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j, -0.5+0.j,  0.5+0.j,
         0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0.5+0.j, -0.5+0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
        -0.5+0.j,  0.5+0.j,  0. +0.j,  0. +0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j],
       [ 0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,  0. +0.j,
         0. +0.j,  0. +0.j,  0.5+0.j,  0.5+0.j]]), 'P10': array([[0.-0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.-0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.5j, 0.+0.5j, 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.-0.5j, 0.-0.5j, 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.5j, 0.-0.5j, 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.5j, 0.-0.5j, 0.+0.j ,
        0.+0.j , 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.-0.5j,
        0.+0.5j, 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.-0.5j,
        0.+0.5j, 0.+0.j , 0.+0.j ],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.-0.5j, 0.-0.5j],
       [0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j , 0.+0.j ,
        0.+0.j , 0.+0.5j, 0.+0.5j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00', 'P01', 'P11', 'P10'])


====================
* * imul : 0

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM5d is 0
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM5d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 0 > of < GM5d > is : 0.9999999999999998
* basis set for multi 0 of  GM5d is
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865474
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865474 0.7071067811865475
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865474 0.7071067811865474
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM5d is 2
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM5d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 1 > of < GM5d > is : 0.9999999999999999
* basis set for multi 1 of  GM5d is
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 2

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (-1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 2 of irreps  GM5d is 4
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 2 > of < GM5d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 2 > of < GM5d > is : 0.9999999999999999
* basis set for multi 2 of  GM5d is
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 3

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (-1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 3 of irreps  GM5d is 6
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 3 > of < GM5d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 3 > of < GM5d > is : 0.9999999999999999
* basis set for multi 3 of  GM5d is
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 4

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865474
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
       i= 2 components =  (-1+0j)
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j -0.70710678+0.j  0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [ 0.+0.j  0.+0.j -1.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j  0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 6 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
       i= 6 components =  (1+0j)
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0

is independent? :  [False]

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 6 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
       i= 7 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.7071067811865476
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 1 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 2 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 3 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 4 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 5 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 6 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
       i= 7 components =  0j
basis    :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
 -0.70710678+0.j  0.70710678+0.j]
     Not Sad (isindependent value) :  1.414213562373095

is independent? :  [True]
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 4 of irreps  GM5d is 8
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 4 > of < GM5d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 4 > of < GM5d > is : 0.9999999999999999
* basis set for multi 4 of  GM5d is
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
basis before norm :
 [[ 0.70710678+0.j  0.70710678+0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j]
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
   0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j]
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.70710678+0.j  0.70710678+0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j]
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j  0.70710678+0.j  0.70710678+0.j
   0.        +0.j  0.        +0.j]
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
   0.70710678+0.j -0.70710678+0.j]]
basis before norm :
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j])]
basis before norm :
 [[0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
  0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.+0.j         0.+0.j        ]
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
  0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.+0.j         0.+0.j        ]
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
  0.+0.j         0.+0.j        ]
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
  0.+0.j         0.+0.j        ]
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.+0.j         0.+0.j         0.+0.j         0.+0.j
  0.-0.70710678j 0.-0.70710678j]]
basis before norm :
 [array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
check before entering isOrthogonal :

                   vectors_new_all : [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
                   vectors_new_all_copy : [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
-----> equal
-----
ir1= 2  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 3  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 4  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
-----> equal
-----
ir1= 5  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 3
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 4
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 5
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 6
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
-----
ir1= 6  ir2= 7
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 8
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 9
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 10
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
-----
ir1= 7  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
-----
ir1= 8  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
-----> equal
-----
ir1= 9  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 6
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  2   ->  True

----------
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  3   ->  True

----------
basis:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
ir1=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  4   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  2   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  3   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  4   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  1   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
-----> equal
Ortho: multi1 =  2  multi2 =  2   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  3   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  4   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  1   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  2   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
-----> equal
Ortho: multi1 =  3  multi2 =  3   ->  True

----------
basis:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  4   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.-0.70710678j 0.+0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  0   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.70710678+0.j -0.70710678+0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  1   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.70710678+0.j 0.70710678+0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.70710678j 0.-0.70710678j 0.+0.j         0.+0.j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  2   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.        +0.j 0.        +0.j 0.        +0.j 0.        +0.j
 0.        +0.j 0.        +0.j 0.70710678+0.j 0.70710678+0.j
 0.        +0.j 0.        +0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.-0.70710678j 0.+0.70710678j
 0.+0.j         0.+0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  3   ->  True

----------
basis:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [ 0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.        +0.j  0.        +0.j  0.        +0.j  0.        +0.j
  0.70710678+0.j -0.70710678+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
ir2=
 [0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.+0.j         0.+0.j         0.+0.j         0.+0.j
 0.-0.70710678j 0.-0.70710678j]
-----> equal
Ortho: multi1 =  4  multi2 =  4   ->  True

>>>>> irrep : GM6d
multi success!
>>>>> multi : 0
** ** ** ** **  check for projectors matrix value : 
>>> Projectors  : {'Pcharacter': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'Pquasi': array([[[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]],

       [[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j],
        [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
         0.+0.j, 0.+0.j]]]), 'P00': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'P01': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'P11': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]]), 'P10': array([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00', 'P01', 'P11', 'P10'])
* * * * *   orthogonality[irreps] between different irreps

* ** ** ** ** ** ** ** ** ** *
 * I am checking the properties of projectors : W^i_{np}W^j_{qr} = W^i_{nr}\delta_{ij}\delta_{pq}
* ** ** ** ** ** ** ** ** ** *

i =  GM1+ j =  GM1+
     : beautiful~~~ [True]
i =  GM1+ j =  GM1-
     : beautiful~~~ [True]
i =  GM1+ j =  GM2+
     : beautiful~~~ [True]
i =  GM1+ j =  GM2-
     : beautiful~~~ [True]
i =  GM1+ j =  GM3+
     : beautiful~~~ [True]
i =  GM1+ j =  GM3-
     : beautiful~~~ [True]
i =  GM1+ j =  GM4+
     : beautiful~~~ [True]
i =  GM1+ j =  GM4-
     : beautiful~~~ [True]
i =  GM1+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM1+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM1- j =  GM1+
     : beautiful~~~ [True]
i =  GM1- j =  GM1-
     : beautiful~~~ [True]
i =  GM1- j =  GM2+
     : beautiful~~~ [True]
i =  GM1- j =  GM2-
     : beautiful~~~ [True]
i =  GM1- j =  GM3+
     : beautiful~~~ [True]
i =  GM1- j =  GM3-
     : beautiful~~~ [True]
i =  GM1- j =  GM4+
     : beautiful~~~ [True]
i =  GM1- j =  GM4-
     : beautiful~~~ [True]
i =  GM1- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM1- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM2+ j =  GM1+
     : beautiful~~~ [True]
i =  GM2+ j =  GM1-
     : beautiful~~~ [True]
i =  GM2+ j =  GM2+
     : beautiful~~~ [True]
i =  GM2+ j =  GM2-
     : beautiful~~~ [True]
i =  GM2+ j =  GM3+
     : beautiful~~~ [True]
i =  GM2+ j =  GM3-
     : beautiful~~~ [True]
i =  GM2+ j =  GM4+
     : beautiful~~~ [True]
i =  GM2+ j =  GM4-
     : beautiful~~~ [True]
i =  GM2+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM2+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM2- j =  GM1+
     : beautiful~~~ [True]
i =  GM2- j =  GM1-
     : beautiful~~~ [True]
i =  GM2- j =  GM2+
     : beautiful~~~ [True]
i =  GM2- j =  GM2-
     : beautiful~~~ [True]
i =  GM2- j =  GM3+
     : beautiful~~~ [True]
i =  GM2- j =  GM3-
     : beautiful~~~ [True]
i =  GM2- j =  GM4+
     : beautiful~~~ [True]
i =  GM2- j =  GM4-
     : beautiful~~~ [True]
i =  GM2- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM2- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM3+ j =  GM1+
     : beautiful~~~ [True]
i =  GM3+ j =  GM1-
     : beautiful~~~ [True]
i =  GM3+ j =  GM2+
     : beautiful~~~ [True]
i =  GM3+ j =  GM2-
     : beautiful~~~ [True]
i =  GM3+ j =  GM3+
     : beautiful~~~ [True]
i =  GM3+ j =  GM3-
     : beautiful~~~ [True]
i =  GM3+ j =  GM4+
     : beautiful~~~ [True]
i =  GM3+ j =  GM4-
     : beautiful~~~ [True]
i =  GM3+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM3+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM3- j =  GM1+
     : beautiful~~~ [True]
i =  GM3- j =  GM1-
     : beautiful~~~ [True]
i =  GM3- j =  GM2+
     : beautiful~~~ [True]
i =  GM3- j =  GM2-
     : beautiful~~~ [True]
i =  GM3- j =  GM3+
     : beautiful~~~ [True]
i =  GM3- j =  GM3-
     : beautiful~~~ [True]
i =  GM3- j =  GM4+
     : beautiful~~~ [True]
i =  GM3- j =  GM4-
     : beautiful~~~ [True]
i =  GM3- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM3- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM4+ j =  GM1+
     : beautiful~~~ [True]
i =  GM4+ j =  GM1-
     : beautiful~~~ [True]
i =  GM4+ j =  GM2+
     : beautiful~~~ [True]
i =  GM4+ j =  GM2-
     : beautiful~~~ [True]
i =  GM4+ j =  GM3+
     : beautiful~~~ [True]
i =  GM4+ j =  GM3-
     : beautiful~~~ [True]
i =  GM4+ j =  GM4+
     : beautiful~~~ [True]
i =  GM4+ j =  GM4-
     : beautiful~~~ [True]
i =  GM4+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM4+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM4- j =  GM1+
     : beautiful~~~ [True]
i =  GM4- j =  GM1-
     : beautiful~~~ [True]
i =  GM4- j =  GM2+
     : beautiful~~~ [True]
i =  GM4- j =  GM2-
     : beautiful~~~ [True]
i =  GM4- j =  GM3+
     : beautiful~~~ [True]
i =  GM4- j =  GM3-
     : beautiful~~~ [True]
i =  GM4- j =  GM4+
     : beautiful~~~ [True]
i =  GM4- j =  GM4-
     : beautiful~~~ [True]
i =  GM4- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM4- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM1+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM1-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM2+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM2-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM3+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM3-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM4+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM4-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM5d
     : beautiful~~~ [True, True]
i =  GM5d j =  GM6d
     : beautiful~~~ [True, True, True, True, True, True, True, True, True]
i =  GM6d j =  GM1+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM1-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM2+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM2-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM3+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM3-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM4+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM4-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM5d
     : beautiful~~~ [True, True, True, True, True, True, True, True, True]
i =  GM6d j =  GM6d
     : beautiful~~~ [True, True]
****************************************

 * Check for bases of irreps 

<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 0 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 0 iop 1 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.999999999999999
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 2 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 8.881784197001252e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 3 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 4 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 0 iop 5 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.999999999999999
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 6 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 8.881784197001252e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 7 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 8 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 0 iop 9 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.999999999999999
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 10 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 8.881784197001252e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 11 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 12 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 0 iop 13 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.999999999999999
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 14 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 8.881784197001252e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 0 iop 15 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 9.992007221626409e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 0 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 1 iop 1 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 2 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 3 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 4 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 1 iop 5 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 6 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 7 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 8 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 1 iop 9 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 10 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 11 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 12 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 1 iop 13 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 14 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 1 iop 15 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 0 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 2 iop 1 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 2 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 3 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 4 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 2 iop 5 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 6 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 7 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 8 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 2 iop 9 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 10 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 11 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 12 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 2 iop 13 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 14 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 2 iop 15 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 0 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 3 iop 1 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 2 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 3 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 4 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 3 iop 5 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 6 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 7 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 8 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 3 iop 9 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 10 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 11 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 12 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 3 iop 13 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 14 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 3 iop 15 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 0 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 4 iop 1 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 2 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 3 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 4 character: [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]] rep [[1.+0.j 0.+0.j]
 [0.+0.j 1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 4 iop 5 character: [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]] rep [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 6 character: [[ 0.+0.j -0.-1.j]
 [-0.-1.j  0.+0.j]] rep [[0.+0.j 0.-1.j]
 [0.-1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 7 character: [[-0.-1.j  0.+0.j]
 [ 0.+0.j  0.+1.j]] rep [[0.-1.j 0.+0.j]
 [0.+0.j 0.+1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 8 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 4 iop 9 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 10 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 11 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 12 character: [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]] rep [[-1.+0.j  0.+0.j]
 [ 0.+0.j -1.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Error : ir= GM5d imul= 4 iop 13 character: [[ 0.+0.j  1.+0.j]
 [-1.+0.j  0.+0.j]] rep [[ 0.+0.j -1.+0.j]
 [ 1.+0.j  0.+0.j]]  error = 3.9999999999999996
   op:
 [[0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j 0.+0.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+1.j 0.+0.j]
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.-1.j]]
   basis_set:
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 14 character: [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]] rep [[0.+0.j 0.+1.j]
 [0.+1.j 0.+0.j]]  error = 4.440892098500626e-16
<find_rep> success in <check_irrepbasis_final>
Success : ir= GM5d imul= 4 iop 15 character: [[ 0.+1.j  0.+0.j]
 [ 0.+0.j -0.-1.j]] rep [[0.+1.j 0.+0.j]
 [0.+0.j 0.-1.j]]  error = 4.440892098500626e-16
****************************************
** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 

Check for the symmetry-kept eigenfunctions :
[index from 0]
WARNING:  m= 0 O_i 0 n= 0 <m|O_i|n> = (0.9999999999999991+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 0 n= 1 <m|O_i|n> = (1.0000000000000009+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 0 n= 2 <m|O_i|n> = (0.9999999999999984-8.673617379884035e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 0 n= 3 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 0 n= 4 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 0 n= 5 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 0 n= 6 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 0 n= 7 <m|O_i|n> = (0.9999999999999999+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 0 n= 8 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 0 n= 9 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 0 <m|O_i|n> = 0.9838579150325772j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 0 <m|O_i|n> = (-2.73395130319376e-16+0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 1 <m|O_i|n> = (2.73395130319376e-16+0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 1 <m|O_i|n> = -0.9838579150325788j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 2 <m|O_i|n> = (1.734723475976807e-18+0.9862255706782497j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 2 <m|O_i|n> = (-9.87003447722179e-16-0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 3 <m|O_i|n> = (9.87003447722179e-16-0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 3 <m|O_i|n> = -0.9862255706782515j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 4 <m|O_i|n> = -0.21594655329710685j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 4 <m|O_i|n> = (-5.866071517424132e-13-0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 5 <m|O_i|n> = (5.866071517424132e-13-0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 5 <m|O_i|n> = 0.21594655329710727j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 6 <m|O_i|n> = 0.717647670968057j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 6 <m|O_i|n> = (4.1099068592842514e-13+0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 7 <m|O_i|n> = (-4.1099068592842514e-13+0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 7 <m|O_i|n> = -0.7176476709680555j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 8 <m|O_i|n> = -0.9434143104387986j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 8 <m|O_i|n> = (6.905934157863669e-15-0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 9 <m|O_i|n> = (-6.905934157863669e-15-0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 9 <m|O_i|n> = 0.9434143104387988j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 0 <m|O_i|n> = 0.0008014221384312304j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 0 <m|O_i|n> = (-0.9999899717613929-0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 1 <m|O_i|n> = (0.9999899717613929-0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 1 <m|O_i|n> = -0.0008014221384312274j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 2 <m|O_i|n> = 0.0028119271921694957j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 2 <m|O_i|n> = (-0.9998554868573569+0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 3 <m|O_i|n> = (0.9998554868573569+0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 3 <m|O_i|n> = -0.0028119271921695195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 4 <m|O_i|n> = -0.6003636304668026j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 4 <m|O_i|n> = (-0.788627385062512+0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 5 <m|O_i|n> = (0.788627385062512+0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 5 <m|O_i|n> = 0.6003636304668027j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 6 <m|O_i|n> = (-6.938893903907228e-18+0.26457451053662434j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 6 <m|O_i|n> = (0.9250218213326906-0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 7 <m|O_i|n> = (-0.9250218213326906-0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 7 <m|O_i|n> = -0.2645745105366245j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 8 <m|O_i|n> = 0.01831649385526109j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 8 <m|O_i|n> = (0.9984734385193383-0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 9 <m|O_i|n> = (-0.9984734385193383-0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 9 <m|O_i|n> = -0.018316493855261157j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 0 <m|O_i|n> = 0.17894960394006j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 0 <m|O_i|n> = (0.004478434620327552-0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 1 <m|O_i|n> = (-0.004478434620327552-0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 1 <m|O_i|n> = -0.17894960394006015j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 2 <m|O_i|n> = -0.16538203289905457j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 2 <m|O_i|n> = (-0.017000158859161833-0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 3 <m|O_i|n> = (0.017000158859161833-0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 3 <m|O_i|n> = 0.16538203289905468j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 4 <m|O_i|n> = -0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 4 <m|O_i|n> = (0.6148714073116952+0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 5 <m|O_i|n> = (-0.6148714073116952+0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 5 <m|O_i|n> = 0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 6 <m|O_i|n> = -0.6441910809134429j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 6 <m|O_i|n> = (0.3799139771821407+0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 7 <m|O_i|n> = (-0.3799139771821407+0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 7 <m|O_i|n> = 0.6441910809134435j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 8 <m|O_i|n> = 0.33111017035442514j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 8 <m|O_i|n> = (-0.055233980223857435-0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 9 <m|O_i|n> = (0.055233980223857435-0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 9 <m|O_i|n> = (-8.673617379884035e-19-0.33111017035442525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 4 n= 0 <m|O_i|n> = (0.9999999999999991+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 4 n= 1 <m|O_i|n> = (1.0000000000000009+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 4 n= 2 <m|O_i|n> = (0.9999999999999984-8.673617379884035e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 4 n= 3 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 4 n= 4 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 4 n= 5 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 4 n= 6 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 4 n= 7 <m|O_i|n> = (0.9999999999999999+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 4 n= 8 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 4 n= 9 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 0 <m|O_i|n> = 0.9838579150325772j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 0 <m|O_i|n> = (-2.73395130319376e-16+0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 1 <m|O_i|n> = (2.73395130319376e-16+0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 1 <m|O_i|n> = -0.9838579150325788j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 2 <m|O_i|n> = (1.734723475976807e-18+0.9862255706782497j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 2 <m|O_i|n> = (-9.87003447722179e-16-0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 3 <m|O_i|n> = (9.87003447722179e-16-0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 3 <m|O_i|n> = -0.9862255706782515j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 4 <m|O_i|n> = -0.21594655329710685j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 4 <m|O_i|n> = (-5.866071517424132e-13-0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 5 <m|O_i|n> = (5.866071517424132e-13-0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 5 <m|O_i|n> = 0.21594655329710727j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 6 <m|O_i|n> = 0.717647670968057j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 6 <m|O_i|n> = (4.1099068592842514e-13+0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 7 <m|O_i|n> = (-4.1099068592842514e-13+0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 7 <m|O_i|n> = -0.7176476709680555j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 8 <m|O_i|n> = -0.9434143104387986j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 8 <m|O_i|n> = (6.905934157863669e-15-0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 9 <m|O_i|n> = (-6.905934157863669e-15-0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 9 <m|O_i|n> = 0.9434143104387988j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 0 <m|O_i|n> = 0.0008014221384312304j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 0 <m|O_i|n> = (-0.9999899717613929-0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 1 <m|O_i|n> = (0.9999899717613929-0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 1 <m|O_i|n> = -0.0008014221384312274j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 2 <m|O_i|n> = 0.0028119271921694957j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 2 <m|O_i|n> = (-0.9998554868573569+0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 3 <m|O_i|n> = (0.9998554868573569+0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 3 <m|O_i|n> = -0.0028119271921695195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 4 <m|O_i|n> = -0.6003636304668026j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 4 <m|O_i|n> = (-0.788627385062512+0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 5 <m|O_i|n> = (0.788627385062512+0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 5 <m|O_i|n> = 0.6003636304668027j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 6 <m|O_i|n> = (-6.938893903907228e-18+0.26457451053662434j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 6 <m|O_i|n> = (0.9250218213326906-0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 7 <m|O_i|n> = (-0.9250218213326906-0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 7 <m|O_i|n> = -0.2645745105366245j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 8 <m|O_i|n> = 0.01831649385526109j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 8 <m|O_i|n> = (0.9984734385193383-0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 9 <m|O_i|n> = (-0.9984734385193383-0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 9 <m|O_i|n> = -0.018316493855261157j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 0 <m|O_i|n> = 0.17894960394006j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 0 <m|O_i|n> = (0.004478434620327552-0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 1 <m|O_i|n> = (-0.004478434620327552-0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 1 <m|O_i|n> = -0.17894960394006015j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 2 <m|O_i|n> = -0.16538203289905457j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 2 <m|O_i|n> = (-0.017000158859161833-0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 3 <m|O_i|n> = (0.017000158859161833-0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 3 <m|O_i|n> = 0.16538203289905468j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 4 <m|O_i|n> = -0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 4 <m|O_i|n> = (0.6148714073116952+0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 5 <m|O_i|n> = (-0.6148714073116952+0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 5 <m|O_i|n> = 0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 6 <m|O_i|n> = -0.6441910809134429j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 6 <m|O_i|n> = (0.3799139771821407+0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 7 <m|O_i|n> = (-0.3799139771821407+0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 7 <m|O_i|n> = 0.6441910809134435j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 8 <m|O_i|n> = 0.33111017035442514j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 8 <m|O_i|n> = (-0.055233980223857435-0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 9 <m|O_i|n> = (0.055233980223857435-0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 9 <m|O_i|n> = (-8.673617379884035e-19-0.33111017035442525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 8 n= 0 <m|O_i|n> = (-0.9999999999999991+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 8 n= 1 <m|O_i|n> = (-1.0000000000000009+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 8 n= 2 <m|O_i|n> = (-0.9999999999999984+8.673617379884035e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 8 n= 3 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 8 n= 4 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 8 n= 5 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 8 n= 6 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 8 n= 7 <m|O_i|n> = (-0.9999999999999999+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 8 n= 8 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 8 n= 9 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 0 <m|O_i|n> = -0.9838579150325772j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 0 <m|O_i|n> = (2.73395130319376e-16-0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 1 <m|O_i|n> = (-2.73395130319376e-16-0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 1 <m|O_i|n> = 0.9838579150325788j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 2 <m|O_i|n> = (-1.734723475976807e-18-0.9862255706782497j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 2 <m|O_i|n> = (9.87003447722179e-16+0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 3 <m|O_i|n> = (-9.87003447722179e-16+0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 3 <m|O_i|n> = 0.9862255706782515j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 4 <m|O_i|n> = 0.21594655329710685j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 4 <m|O_i|n> = (5.866071517424132e-13+0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 5 <m|O_i|n> = (-5.866071517424132e-13+0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 5 <m|O_i|n> = -0.21594655329710727j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 6 <m|O_i|n> = -0.717647670968057j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 6 <m|O_i|n> = (-4.1099068592842514e-13-0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 7 <m|O_i|n> = (4.1099068592842514e-13-0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 7 <m|O_i|n> = 0.7176476709680555j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 8 <m|O_i|n> = 0.9434143104387986j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 8 <m|O_i|n> = (-6.905934157863669e-15+0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 9 <m|O_i|n> = (6.905934157863669e-15+0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 9 <m|O_i|n> = -0.9434143104387988j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 0 <m|O_i|n> = -0.0008014221384312304j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 0 <m|O_i|n> = (0.9999899717613929+0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 1 <m|O_i|n> = (-0.9999899717613929+0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 1 <m|O_i|n> = 0.0008014221384312274j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 2 <m|O_i|n> = -0.0028119271921694957j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 2 <m|O_i|n> = (0.9998554868573569-0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 3 <m|O_i|n> = (-0.9998554868573569-0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 3 <m|O_i|n> = 0.0028119271921695195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 4 <m|O_i|n> = 0.6003636304668026j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 4 <m|O_i|n> = (0.788627385062512-0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 5 <m|O_i|n> = (-0.788627385062512-0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 5 <m|O_i|n> = -0.6003636304668027j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 6 <m|O_i|n> = (6.938893903907228e-18-0.26457451053662434j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 6 <m|O_i|n> = (-0.9250218213326906+0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 7 <m|O_i|n> = (0.9250218213326906+0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 7 <m|O_i|n> = 0.2645745105366245j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 8 <m|O_i|n> = -0.01831649385526109j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 8 <m|O_i|n> = (-0.9984734385193383+0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 9 <m|O_i|n> = (0.9984734385193383+0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 9 <m|O_i|n> = 0.018316493855261157j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 0 <m|O_i|n> = -0.17894960394006j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 0 <m|O_i|n> = (-0.004478434620327552+0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 1 <m|O_i|n> = (0.004478434620327552+0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 1 <m|O_i|n> = 0.17894960394006015j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 2 <m|O_i|n> = 0.16538203289905457j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 2 <m|O_i|n> = (0.017000158859161833+0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 3 <m|O_i|n> = (-0.017000158859161833+0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 3 <m|O_i|n> = -0.16538203289905468j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 4 <m|O_i|n> = 0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 4 <m|O_i|n> = (-0.6148714073116952-0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 5 <m|O_i|n> = (0.6148714073116952-0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 5 <m|O_i|n> = -0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 6 <m|O_i|n> = 0.6441910809134429j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 6 <m|O_i|n> = (-0.3799139771821407-0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 7 <m|O_i|n> = (0.3799139771821407-0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 7 <m|O_i|n> = -0.6441910809134435j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 8 <m|O_i|n> = -0.33111017035442514j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 8 <m|O_i|n> = (0.055233980223857435+0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 9 <m|O_i|n> = (-0.055233980223857435+0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 9 <m|O_i|n> = (8.673617379884035e-19+0.33111017035442525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 12 n= 0 <m|O_i|n> = (-0.9999999999999991+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 12 n= 1 <m|O_i|n> = (-1.0000000000000009+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 12 n= 2 <m|O_i|n> = (-0.9999999999999984+8.673617379884035e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 12 n= 3 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 12 n= 4 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 12 n= 5 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 12 n= 6 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 12 n= 7 <m|O_i|n> = (-0.9999999999999999+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 12 n= 8 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 12 n= 9 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 0 <m|O_i|n> = -0.9838579150325772j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 0 <m|O_i|n> = (2.73395130319376e-16-0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 1 <m|O_i|n> = (-2.73395130319376e-16-0.17895139850738337j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 1 <m|O_i|n> = 0.9838579150325788j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 2 <m|O_i|n> = (-1.734723475976807e-18-0.9862255706782497j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 2 <m|O_i|n> = (9.87003447722179e-16+0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 3 <m|O_i|n> = (-9.87003447722179e-16+0.16540593623071104j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 3 <m|O_i|n> = 0.9862255706782515j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 4 <m|O_i|n> = 0.21594655329710685j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 4 <m|O_i|n> = (5.866071517424132e-13+0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 5 <m|O_i|n> = (-5.866071517424132e-13+0.9764051854220662j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 5 <m|O_i|n> = -0.21594655329710727j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 6 <m|O_i|n> = -0.717647670968057j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 6 <m|O_i|n> = (-4.1099068592842514e-13-0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 7 <m|O_i|n> = (4.1099068592842514e-13-0.696406361511815j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 7 <m|O_i|n> = 0.7176476709680555j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 8 <m|O_i|n> = 0.9434143104387986j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 8 <m|O_i|n> = (-6.905934157863669e-15+0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 9 <m|O_i|n> = (6.905934157863669e-15+0.3316164031818787j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 9 <m|O_i|n> = -0.9434143104387988j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 0 <m|O_i|n> = -0.0008014221384312304j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 0 <m|O_i|n> = (0.9999899717613929+0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 1 <m|O_i|n> = (-0.9999899717613929+0.00440614334816523j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 1 <m|O_i|n> = 0.0008014221384312274j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 2 <m|O_i|n> = -0.0028119271921694957j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 2 <m|O_i|n> = (0.9998554868573569-0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 3 <m|O_i|n> = (-0.9998554868573569-0.016765991372497967j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 3 <m|O_i|n> = 0.0028119271921695195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 4 <m|O_i|n> = 0.6003636304668026j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 4 <m|O_i|n> = (0.788627385062512-0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 5 <m|O_i|n> = (-0.788627385062512-0.13277936113035388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 5 <m|O_i|n> = -0.6003636304668027j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 6 <m|O_i|n> = (6.938893903907228e-18-0.26457451053662434j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 6 <m|O_i|n> = (-0.9250218213326906+0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 7 <m|O_i|n> = (0.9250218213326906+0.2726443808932393j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 7 <m|O_i|n> = 0.2645745105366245j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 8 <m|O_i|n> = -0.01831649385526109j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 8 <m|O_i|n> = (-0.9984734385193383+0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 9 <m|O_i|n> = (0.9984734385193383+0.05210852736567842j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 9 <m|O_i|n> = 0.018316493855261157j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 0 <m|O_i|n> = -0.17894960394006j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 0 <m|O_i|n> = (-0.004478434620327552+0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 1 <m|O_i|n> = (0.004478434620327552+0.9838480486706507j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 1 <m|O_i|n> = 0.17894960394006015j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 2 <m|O_i|n> = 0.16538203289905457j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 2 <m|O_i|n> = (0.017000158859161833+0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 3 <m|O_i|n> = (-0.017000158859161833+0.9860830481216774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 3 <m|O_i|n> = -0.16538203289905468j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 4 <m|O_i|n> = 0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 4 <m|O_i|n> = (-0.6148714073116952-0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 5 <m|O_i|n> = (0.6148714073116952-0.17030136563960774j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 5 <m|O_i|n> = -0.7700198681409591j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 6 <m|O_i|n> = 0.6441910809134429j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 6 <m|O_i|n> = (-0.3799139771821407-0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 7 <m|O_i|n> = (0.3799139771821407-0.6638397556739261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 7 <m|O_i|n> = -0.6441910809134435j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 8 <m|O_i|n> = -0.33111017035442514j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 8 <m|O_i|n> = (0.055233980223857435+0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 9 <m|O_i|n> = (-0.055233980223857435+0.9419741304921778j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 9 <m|O_i|n> = (8.673617379884035e-19+0.33111017035442525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     

** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 
Check : the transformation matrix(basis matrix) in rows :
 [array([0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ]), array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.+0.70710678j,
       0.+0.j        , 0.+0.j        ]), array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.-0.70710678j])]
** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 

Check for the symmetry-kept eigenfunctions :
[index from 0]
WARNING:  m= 0 O_i 0 n= 0 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 0 n= 1 <m|O_i|n> = (0.9999999999999997+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 0 n= 2 <m|O_i|n> = (0.9999999999999996+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 0 n= 3 <m|O_i|n> = (0.9999999999999994+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 0 n= 4 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 0 n= 5 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 0 n= 6 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 0 n= 7 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 0 n= 8 <m|O_i|n> = (0.9999999999999992+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 0 n= 9 <m|O_i|n> = (0.9999999999999993-2.168404344971009e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 0 <m|O_i|n> = 0.20816402115824195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 0 <m|O_i|n> = (-7.582476313494624e-15+0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 0 <m|O_i|n> = (0.1199991416064258-0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 0 <m|O_i|n> = (-0.12428408971362018+0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 0 <m|O_i|n> = (-0.09517536901002752-0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 0 <m|O_i|n> = (-0.1500297589557808+0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 0 <m|O_i|n> = (-0.07849254819570128+0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 0 <m|O_i|n> = (-0.15635473887334564+0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 0 <m|O_i|n> = (0.023075886878786686+0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 0 <m|O_i|n> = (0.0016148023917586917+0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 1 <m|O_i|n> = (7.580741590018647e-15+0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 1 <m|O_i|n> = -0.2081640211582704j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 1 <m|O_i|n> = (0.07663574182305316+0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 1 <m|O_i|n> = (-0.07937226287205496+0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 1 <m|O_i|n> = (-0.06078239318817142+0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 1 <m|O_i|n> = (-0.09581436766287788-0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 1 <m|O_i|n> = (-0.050128147401979545-0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 1 <m|O_i|n> = (-0.09985372595752134+0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 1 <m|O_i|n> = (0.014737086328381478+0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 1 <m|O_i|n> = (0.0010312705368867733-0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 2 <m|O_i|n> = (-0.1199991416064258-0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 2 <m|O_i|n> = (-0.07663574182305316+0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 2 <m|O_i|n> = 0.00466415215520391j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 2 <m|O_i|n> = (1.1671219546371958e-14+0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 2 <m|O_i|n> = (0.0013168176739623283+0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 2 <m|O_i|n> = (0.0020757664537676968+0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 2 <m|O_i|n> = (0.024227291658378988-0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 2 <m|O_i|n> = (0.04826001891812842+0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 2 <m|O_i|n> = (-0.642807981373904-0.06075877659398208j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 2 <m|O_i|n> = (-0.044982360644067146+0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 3 <m|O_i|n> = (0.12428408971362018+0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 3 <m|O_i|n> = (0.07937226287205496+0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 3 <m|O_i|n> = (-1.1671219546371958e-14+0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 3 <m|O_i|n> = -0.004664152155197124j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 3 <m|O_i|n> = (-0.0013638388053108796+0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 3 <m|O_i|n> = (-0.0021498882467853586-0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 3 <m|O_i|n> = (-0.02509240357621556-0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 3 <m|O_i|n> = (-0.0499832952178403-0.04461584847501186j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 3 <m|O_i|n> = (0.6657614692589353-0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 3 <m|O_i|n> = (0.04658859780975524+0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 4 <m|O_i|n> = (0.09517536901002752-0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 4 <m|O_i|n> = (0.06078239318817142+0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 4 <m|O_i|n> = (-0.0013168176739623283+0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 4 <m|O_i|n> = (0.0013638388053108796+0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 4 <m|O_i|n> = -0.3228013993397358j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 4 <m|O_i|n> = (2.0718149418286202e-13+0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 4 <m|O_i|n> = (-0.05003349724333968-0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 4 <m|O_i|n> = (-0.09966518575609365-0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 4 <m|O_i|n> = (-0.09121317396543802+0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 4 <m|O_i|n> = (-0.0063829075022275835-0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 5 <m|O_i|n> = (0.1500297589557808+0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 5 <m|O_i|n> = (0.09581436766287788-0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 5 <m|O_i|n> = (-0.0020757664537676968+0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 5 <m|O_i|n> = (0.0021498882467853586-0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 5 <m|O_i|n> = (-2.0718149418286202e-13+0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 5 <m|O_i|n> = 0.322801399339112j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 5 <m|O_i|n> = (-0.07887033808441252+0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 5 <m|O_i|n> = (-0.15710728469765847-0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 5 <m|O_i|n> = (-0.14378395004906078-0.019687645290827782j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 5 <m|O_i|n> = (-0.010061700668543984+0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 6 <m|O_i|n> = (0.07849254819570128+0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 6 <m|O_i|n> = (0.050128147401979545-0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 6 <m|O_i|n> = (-0.024227291658378988-0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 6 <m|O_i|n> = (0.02509240357621556-0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 6 <m|O_i|n> = (0.05003349724333968-0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 6 <m|O_i|n> = (0.07887033808441252+0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 6 <m|O_i|n> = 0.10211931959162229j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 6 <m|O_i|n> = (-1.1378918640669866e-14-0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 6 <m|O_i|n> = (-0.1279457092090459-0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 6 <m|O_i|n> = (-0.008953373637645243+0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 7 <m|O_i|n> = (0.15635473887334564+0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 7 <m|O_i|n> = (0.09985372595752134+0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 7 <m|O_i|n> = (-0.048260018918128395+0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 7 <m|O_i|n> = (0.0499832952178403-0.04461584847501188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 7 <m|O_i|n> = (0.09966518575609365-0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 7 <m|O_i|n> = (0.15710728469765847-0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 7 <m|O_i|n> = (1.1378918640669866e-14-0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 7 <m|O_i|n> = -0.10211931959098126j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 7 <m|O_i|n> = (-0.2548639127306203-0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 7 <m|O_i|n> = (-0.017834844572248626-0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 8 <m|O_i|n> = (-0.023075886878786686+0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 8 <m|O_i|n> = (-0.014737086328381478+0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 8 <m|O_i|n> = (0.642807981373904-0.06075877659398211j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 8 <m|O_i|n> = (-0.6657614692589353-0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 8 <m|O_i|n> = (0.09121317396543802+0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 8 <m|O_i|n> = (0.14378395004906078-0.01968764529082779j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 8 <m|O_i|n> = (0.1279457092090459-0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 8 <m|O_i|n> = (0.2548639127306203-0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 8 <m|O_i|n> = 0.05091797528286188j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 8 <m|O_i|n> = (-1.3183898417423734e-14+0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 1 n= 9 <m|O_i|n> = (-0.0016148023917586917+0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 1 n= 9 <m|O_i|n> = (-0.0010312705368867733-0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 1 n= 9 <m|O_i|n> = (0.044982360644067146+0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 1 n= 9 <m|O_i|n> = (-0.04658859780975524+0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 1 n= 9 <m|O_i|n> = (0.0063829075022275835-0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 1 n= 9 <m|O_i|n> = (0.010061700668543984+0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 1 n= 9 <m|O_i|n> = (0.008953373637645243+0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 1 n= 9 <m|O_i|n> = (0.017834844572248626-0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 1 n= 9 <m|O_i|n> = (1.3190837311327641e-14+0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 1 n= 9 <m|O_i|n> = (4.336808689942018e-19-0.05091797528285752j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 0 <m|O_i|n> = -0.032895151422979364j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 0 <m|O_i|n> = (0.25331423309151935+0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 0 <m|O_i|n> = (0.36257971679689993+0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 0 <m|O_i|n> = (0.10514856225699966-0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 0 <m|O_i|n> = (0.39952154976886234-0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 0 <m|O_i|n> = (-0.7299743898960498-0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 0 <m|O_i|n> = (0.1079398888945232+0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 0 <m|O_i|n> = (0.011176837588125908+0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 0 <m|O_i|n> = (0.0024578261235361433-0.004162660075154382j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 0 <m|O_i|n> = (0.008072473007675345+0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 1 <m|O_i|n> = (-0.25331423309151935+0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 1 <m|O_i|n> = 0.03289515142298553j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 1 <m|O_i|n> = (-0.038248930295140204-0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 1 <m|O_i|n> = (0.34659118049795545+0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 1 <m|O_i|n> = (0.7303280017338201+0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 1 <m|O_i|n> = (0.28286140937583465+0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 1 <m|O_i|n> = (0.011157654444734148+0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 1 <m|O_i|n> = (-0.10795131475632662-0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 1 <m|O_i|n> = (-0.005061381146478604+0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 1 <m|O_i|n> = (0.004691343744251397+0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 2 <m|O_i|n> = (-0.36257971679689993+0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 2 <m|O_i|n> = (0.038248930295140204-0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 2 <m|O_i|n> = -0.08877474230050203j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 2 <m|O_i|n> = (0.12633731106718438+0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 2 <m|O_i|n> = (-0.10074178661762984+0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 2 <m|O_i|n> = (-0.02684655175686401-0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 2 <m|O_i|n> = (-0.08283739082493279+0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 2 <m|O_i|n> = (0.3923260057928669-0.03919478187918342j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 2 <m|O_i|n> = (0.3624415861043724-0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 2 <m|O_i|n> = (-0.4183550735943305+0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 3 <m|O_i|n> = (-0.10514856225699966-0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 3 <m|O_i|n> = (-0.34659118049795545+0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 3 <m|O_i|n> = (-0.12633731106718438+0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 3 <m|O_i|n> = 0.08877474230049578j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 3 <m|O_i|n> = (0.022184543949431174-0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 3 <m|O_i|n> = (-0.10169918315798984-0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 3 <m|O_i|n> = (0.36723749337520684-0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 3 <m|O_i|n> = (0.1542888160574922+0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 3 <m|O_i|n> = (0.2881093358445147-0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 3 <m|O_i|n> = (0.47972362002007574-0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 4 <m|O_i|n> = (-0.39952154976886234-0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 4 <m|O_i|n> = (-0.7303280017338201+0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 4 <m|O_i|n> = (0.10074178661762984+0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 4 <m|O_i|n> = (-0.022184543949431174-0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 4 <m|O_i|n> = -0.09970967896772773j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 4 <m|O_i|n> = (-0.18272487606257193-0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 4 <m|O_i|n> = (-0.06286133880133525+0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 4 <m|O_i|n> = (-0.0433521049880428-0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 4 <m|O_i|n> = (-0.1929499378421999+0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 4 <m|O_i|n> = (-0.20326732797675579+0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 5 <m|O_i|n> = (0.7299743898960498-0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 5 <m|O_i|n> = (-0.28286140937583465+0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 5 <m|O_i|n> = (0.02684655175686401-0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 5 <m|O_i|n> = (0.10169918315798984-0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 5 <m|O_i|n> = (0.18272487606257193-0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 5 <m|O_i|n> = 0.0997096789677192j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 5 <m|O_i|n> = (-0.03268997125804293+0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 5 <m|O_i|n> = (0.06393170961223243-0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 5 <m|O_i|n> = (0.1516169230994169-0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 5 <m|O_i|n> = (-0.28852650197103213+0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 6 <m|O_i|n> = (-0.1079398888945232+0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 6 <m|O_i|n> = (-0.011157654444734148+0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 6 <m|O_i|n> = (0.08283739082493279+0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 6 <m|O_i|n> = (-0.36723749337520684-0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 6 <m|O_i|n> = (0.06286133880133526+0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 6 <m|O_i|n> = (0.03268997125804293+0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 6 <m|O_i|n> = -0.084743541514694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 6 <m|O_i|n> = (-0.7459664745282237-0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 6 <m|O_i|n> = (0.2626980820049104-0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 6 <m|O_i|n> = (-0.1906143471188896+0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 7 <m|O_i|n> = (-0.011176837588125908+0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 7 <m|O_i|n> = (0.1079513147563266-0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 7 <m|O_i|n> = (-0.3923260057928669-0.03919478187918343j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 7 <m|O_i|n> = (-0.1542888160574922+0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 7 <m|O_i|n> = (0.0433521049880428-0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 7 <m|O_i|n> = (-0.06393170961223243-0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 7 <m|O_i|n> = (0.7459664745282237-0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 7 <m|O_i|n> = 0.08474354151470048j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 7 <m|O_i|n> = (-0.09558129479135347+0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 7 <m|O_i|n> = (-0.42300498524658753+0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 8 <m|O_i|n> = (-0.0024578261235361433-0.004162660075154389j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 8 <m|O_i|n> = (0.005061381146478604+0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 8 <m|O_i|n> = (-0.3624415861043724-0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 8 <m|O_i|n> = (-0.2881093358445147-0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 8 <m|O_i|n> = (0.1929499378421999+0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 8 <m|O_i|n> = (-0.1516169230994169-0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 8 <m|O_i|n> = (-0.2626980820049104-0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 8 <m|O_i|n> = (0.09558129479135347+0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 8 <m|O_i|n> = -0.005566666658978103j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 8 <m|O_i|n> = (0.02943919423647884+0.03957968313925758j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 2 n= 9 <m|O_i|n> = (-0.008072473007675345+0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 2 n= 9 <m|O_i|n> = (-0.004691343744251411+0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 2 n= 9 <m|O_i|n> = (0.4183550735943305+0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 2 n= 9 <m|O_i|n> = (-0.47972362002007574-0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 2 n= 9 <m|O_i|n> = (0.20326732797675579+0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 2 n= 9 <m|O_i|n> = (0.28852650197103213+0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 2 n= 9 <m|O_i|n> = (0.1906143471188896+0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 2 n= 9 <m|O_i|n> = (0.42300498524658753+0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 2 n= 9 <m|O_i|n> = (-0.02943919423647884+0.03957968313925764j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 2 n= 9 <m|O_i|n> = 0.005566666658980021j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 0 <m|O_i|n> = 0.18152595688035297j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 0 <m|O_i|n> = (0.028639196345945007-0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 0 <m|O_i|n> = (-0.02116770138968392-0.04825525393609454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 0 <m|O_i|n> = (0.05010730322945642-0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 0 <m|O_i|n> = (-0.15381473546334684+0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 0 <m|O_i|n> = (-0.10517517308083041-0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 0 <m|O_i|n> = (-0.05110098146535366+0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 0 <m|O_i|n> = (0.0849051842174164-0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 0 <m|O_i|n> = (0.10469990401488116+0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 0 <m|O_i|n> = (0.03688819234476174-0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 1 <m|O_i|n> = (-0.02863919634594501-0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 1 <m|O_i|n> = -0.18152595688033055j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 1 <m|O_i|n> = (0.06419123367213161-0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 1 <m|O_i|n> = (-0.04848423890377082+0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 1 <m|O_i|n> = (0.10394650621537767+0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 1 <m|O_i|n> = (0.25153495502676215-0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 1 <m|O_i|n> = (-0.08500843293420515+0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 1 <m|O_i|n> = (-0.050102951615375244+0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 1 <m|O_i|n> = (-0.16848113572125914-0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 1 <m|O_i|n> = (0.007089079990153322-0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 2 <m|O_i|n> = (0.02116770138968392-0.04825525393609451j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 2 <m|O_i|n> = (-0.06419123367213161-0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 2 <m|O_i|n> = 0.4199421742506643j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 2 <m|O_i|n> = (0.2954484963536589-0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 2 <m|O_i|n> = (-0.32349583884380434-0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 2 <m|O_i|n> = (-0.06015686065925241+0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 2 <m|O_i|n> = (0.18270003474434027+0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 2 <m|O_i|n> = (-0.15788055713766969+0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 2 <m|O_i|n> = (-0.025510644909081726-0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 2 <m|O_i|n> = (-0.020363163030185066-0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 3 <m|O_i|n> = (-0.05010730322945642-0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 3 <m|O_i|n> = (0.04848423890377082+0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 3 <m|O_i|n> = (-0.2954484963536589-0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 3 <m|O_i|n> = -0.4199421742506856j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 3 <m|O_i|n> = (0.09482008681064273+0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 3 <m|O_i|n> = (-0.3163773495213298+0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 3 <m|O_i|n> = (-0.24231403573602606-0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 3 <m|O_i|n> = (0.057764297407262785+0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 3 <m|O_i|n> = (-0.02722013228780784-0.020967669384589216j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 3 <m|O_i|n> = (0.017336558782344996+0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 4 <m|O_i|n> = (0.15381473546334684+0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 4 <m|O_i|n> = (-0.10394650621537767+0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 4 <m|O_i|n> = (0.32349583884380434-0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 4 <m|O_i|n> = (-0.09482008681064275+0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 4 <m|O_i|n> = 0.2579428692342511j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 4 <m|O_i|n> = (-0.17197824979204818+0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 4 <m|O_i|n> = (-0.11018302325548332-0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 4 <m|O_i|n> = (0.006705575984174358+0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 4 <m|O_i|n> = (0.07511846870045998+0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 4 <m|O_i|n> = (-0.024610915959644392-0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 5 <m|O_i|n> = (0.10517517308083041-0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 5 <m|O_i|n> = (-0.25153495502676215-0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 5 <m|O_i|n> = (0.06015686065925241+0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 5 <m|O_i|n> = (0.3163773495213298+0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 5 <m|O_i|n> = (0.17197824979204818+0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 5 <m|O_i|n> = -0.2579428692344977j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 5 <m|O_i|n> = (-0.13059976706922918-0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 5 <m|O_i|n> = (0.0963989500925435-0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 5 <m|O_i|n> = (-0.04305534325737177-0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 5 <m|O_i|n> = (-0.05009465554790803-0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 6 <m|O_i|n> = (0.05110098146535366+0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 6 <m|O_i|n> = (0.08500843293420515+0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 6 <m|O_i|n> = (-0.18270003474434027+0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 6 <m|O_i|n> = (0.24231403573602606-0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 6 <m|O_i|n> = (0.11018302325548332-0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 6 <m|O_i|n> = (0.13059976706922918-0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 6 <m|O_i|n> = 0.05756619542227479j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 6 <m|O_i|n> = (-0.010169099808647997+0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 6 <m|O_i|n> = (0.11238472248395591+0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 6 <m|O_i|n> = (0.017801587128876986+0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 7 <m|O_i|n> = (-0.0849051842174164-0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 7 <m|O_i|n> = (0.050102951615375244+0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 7 <m|O_i|n> = (0.15788055713766966+0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 7 <m|O_i|n> = (-0.057764297407262785+0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 7 <m|O_i|n> = (-0.006705575984174358+0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 7 <m|O_i|n> = (-0.0963989500925435-0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 7 <m|O_i|n> = (0.010169099808647997+0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 7 <m|O_i|n> = -0.057566195422031674j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 7 <m|O_i|n> = (-0.058144722261218404-0.05154145319066266j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 7 <m|O_i|n> = (0.015725628312653436+0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 8 <m|O_i|n> = (-0.10469990401488116+0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 8 <m|O_i|n> = (0.16848113572125914-0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 8 <m|O_i|n> = (0.025510644909081726-0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 8 <m|O_i|n> = (0.027220132287807786-0.020967669384589244j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 8 <m|O_i|n> = (-0.07511846870045998+0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 8 <m|O_i|n> = (0.04305534325737177-0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 8 <m|O_i|n> = (-0.11238472248395591+0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 8 <m|O_i|n> = (0.058144722261218404-0.05154145319066265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 8 <m|O_i|n> = (-3.469446951953614e-18-0.07837686690571478j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 8 <m|O_i|n> = (-0.764043805289339+0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 3 n= 9 <m|O_i|n> = (-0.03688819234476174-0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 3 n= 9 <m|O_i|n> = (-0.007089079990153322-0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 3 n= 9 <m|O_i|n> = (0.020363163030185066-0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 3 n= 9 <m|O_i|n> = (-0.01733655878234497+0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 3 n= 9 <m|O_i|n> = (0.024610915959644392-0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 3 n= 9 <m|O_i|n> = (0.05009465554790803-0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 3 n= 9 <m|O_i|n> = (-0.017801587128876986+0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 3 n= 9 <m|O_i|n> = (-0.015725628312653436+0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 3 n= 9 <m|O_i|n> = (0.764043805289339+0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 3 n= 9 <m|O_i|n> = 0.07837686690571694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 4 n= 0 <m|O_i|n> = (1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 4 n= 1 <m|O_i|n> = (0.9999999999999997+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 4 n= 2 <m|O_i|n> = (0.9999999999999996+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 4 n= 3 <m|O_i|n> = (0.9999999999999994+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 4 n= 4 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 4 n= 5 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 4 n= 6 <m|O_i|n> = (1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 4 n= 7 <m|O_i|n> = (1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 4 n= 8 <m|O_i|n> = (0.9999999999999992+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 4 n= 9 <m|O_i|n> = (0.9999999999999993-2.168404344971009e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 0 <m|O_i|n> = 0.20816402115824195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 0 <m|O_i|n> = (-7.582476313494624e-15+0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 0 <m|O_i|n> = (0.1199991416064258-0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 0 <m|O_i|n> = (-0.12428408971362018+0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 0 <m|O_i|n> = (-0.09517536901002752-0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 0 <m|O_i|n> = (-0.1500297589557808+0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 0 <m|O_i|n> = (-0.07849254819570128+0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 0 <m|O_i|n> = (-0.15635473887334564+0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 0 <m|O_i|n> = (0.023075886878786686+0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 0 <m|O_i|n> = (0.0016148023917586917+0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 1 <m|O_i|n> = (7.580741590018647e-15+0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 1 <m|O_i|n> = -0.2081640211582704j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 1 <m|O_i|n> = (0.07663574182305316+0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 1 <m|O_i|n> = (-0.07937226287205496+0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 1 <m|O_i|n> = (-0.06078239318817142+0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 1 <m|O_i|n> = (-0.09581436766287788-0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 1 <m|O_i|n> = (-0.050128147401979545-0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 1 <m|O_i|n> = (-0.09985372595752134+0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 1 <m|O_i|n> = (0.014737086328381478+0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 1 <m|O_i|n> = (0.0010312705368867733-0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 2 <m|O_i|n> = (-0.1199991416064258-0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 2 <m|O_i|n> = (-0.07663574182305316+0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 2 <m|O_i|n> = 0.00466415215520391j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 2 <m|O_i|n> = (1.1671219546371958e-14+0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 2 <m|O_i|n> = (0.0013168176739623283+0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 2 <m|O_i|n> = (0.0020757664537676968+0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 2 <m|O_i|n> = (0.024227291658378988-0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 2 <m|O_i|n> = (0.04826001891812842+0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 2 <m|O_i|n> = (-0.642807981373904-0.06075877659398208j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 2 <m|O_i|n> = (-0.044982360644067146+0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 3 <m|O_i|n> = (0.12428408971362018+0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 3 <m|O_i|n> = (0.07937226287205496+0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 3 <m|O_i|n> = (-1.1671219546371958e-14+0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 3 <m|O_i|n> = -0.004664152155197124j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 3 <m|O_i|n> = (-0.0013638388053108796+0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 3 <m|O_i|n> = (-0.0021498882467853586-0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 3 <m|O_i|n> = (-0.02509240357621556-0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 3 <m|O_i|n> = (-0.0499832952178403-0.04461584847501186j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 3 <m|O_i|n> = (0.6657614692589353-0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 3 <m|O_i|n> = (0.04658859780975524+0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 4 <m|O_i|n> = (0.09517536901002752-0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 4 <m|O_i|n> = (0.06078239318817142+0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 4 <m|O_i|n> = (-0.0013168176739623283+0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 4 <m|O_i|n> = (0.0013638388053108796+0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 4 <m|O_i|n> = -0.3228013993397358j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 4 <m|O_i|n> = (2.0718149418286202e-13+0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 4 <m|O_i|n> = (-0.05003349724333968-0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 4 <m|O_i|n> = (-0.09966518575609365-0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 4 <m|O_i|n> = (-0.09121317396543802+0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 4 <m|O_i|n> = (-0.0063829075022275835-0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 5 <m|O_i|n> = (0.1500297589557808+0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 5 <m|O_i|n> = (0.09581436766287788-0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 5 <m|O_i|n> = (-0.0020757664537676968+0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 5 <m|O_i|n> = (0.0021498882467853586-0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 5 <m|O_i|n> = (-2.0718149418286202e-13+0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 5 <m|O_i|n> = 0.322801399339112j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 5 <m|O_i|n> = (-0.07887033808441252+0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 5 <m|O_i|n> = (-0.15710728469765847-0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 5 <m|O_i|n> = (-0.14378395004906078-0.019687645290827782j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 5 <m|O_i|n> = (-0.010061700668543984+0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 6 <m|O_i|n> = (0.07849254819570128+0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 6 <m|O_i|n> = (0.050128147401979545-0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 6 <m|O_i|n> = (-0.024227291658378988-0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 6 <m|O_i|n> = (0.02509240357621556-0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 6 <m|O_i|n> = (0.05003349724333968-0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 6 <m|O_i|n> = (0.07887033808441252+0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 6 <m|O_i|n> = 0.10211931959162229j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 6 <m|O_i|n> = (-1.1378918640669866e-14-0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 6 <m|O_i|n> = (-0.1279457092090459-0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 6 <m|O_i|n> = (-0.008953373637645243+0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 7 <m|O_i|n> = (0.15635473887334564+0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 7 <m|O_i|n> = (0.09985372595752134+0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 7 <m|O_i|n> = (-0.048260018918128395+0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 7 <m|O_i|n> = (0.0499832952178403-0.04461584847501188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 7 <m|O_i|n> = (0.09966518575609365-0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 7 <m|O_i|n> = (0.15710728469765847-0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 7 <m|O_i|n> = (1.1378918640669866e-14-0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 7 <m|O_i|n> = -0.10211931959098126j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 7 <m|O_i|n> = (-0.2548639127306203-0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 7 <m|O_i|n> = (-0.017834844572248626-0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 8 <m|O_i|n> = (-0.023075886878786686+0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 8 <m|O_i|n> = (-0.014737086328381478+0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 8 <m|O_i|n> = (0.642807981373904-0.06075877659398211j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 8 <m|O_i|n> = (-0.6657614692589353-0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 8 <m|O_i|n> = (0.09121317396543802+0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 8 <m|O_i|n> = (0.14378395004906078-0.01968764529082779j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 8 <m|O_i|n> = (0.1279457092090459-0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 8 <m|O_i|n> = (0.2548639127306203-0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 8 <m|O_i|n> = 0.05091797528286188j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 8 <m|O_i|n> = (-1.3183898417423734e-14+0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 5 n= 9 <m|O_i|n> = (-0.0016148023917586917+0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 5 n= 9 <m|O_i|n> = (-0.0010312705368867733-0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 5 n= 9 <m|O_i|n> = (0.044982360644067146+0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 5 n= 9 <m|O_i|n> = (-0.04658859780975524+0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 5 n= 9 <m|O_i|n> = (0.0063829075022275835-0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 5 n= 9 <m|O_i|n> = (0.010061700668543984+0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 5 n= 9 <m|O_i|n> = (0.008953373637645243+0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 5 n= 9 <m|O_i|n> = (0.017834844572248626-0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 5 n= 9 <m|O_i|n> = (1.3190837311327641e-14+0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 5 n= 9 <m|O_i|n> = (4.336808689942018e-19-0.05091797528285752j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 0 <m|O_i|n> = -0.032895151422979364j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 0 <m|O_i|n> = (0.25331423309151935+0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 0 <m|O_i|n> = (0.36257971679689993+0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 0 <m|O_i|n> = (0.10514856225699966-0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 0 <m|O_i|n> = (0.39952154976886234-0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 0 <m|O_i|n> = (-0.7299743898960498-0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 0 <m|O_i|n> = (0.1079398888945232+0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 0 <m|O_i|n> = (0.011176837588125908+0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 0 <m|O_i|n> = (0.0024578261235361433-0.004162660075154382j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 0 <m|O_i|n> = (0.008072473007675345+0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 1 <m|O_i|n> = (-0.25331423309151935+0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 1 <m|O_i|n> = 0.03289515142298553j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 1 <m|O_i|n> = (-0.038248930295140204-0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 1 <m|O_i|n> = (0.34659118049795545+0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 1 <m|O_i|n> = (0.7303280017338201+0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 1 <m|O_i|n> = (0.28286140937583465+0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 1 <m|O_i|n> = (0.011157654444734148+0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 1 <m|O_i|n> = (-0.10795131475632662-0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 1 <m|O_i|n> = (-0.005061381146478604+0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 1 <m|O_i|n> = (0.004691343744251397+0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 2 <m|O_i|n> = (-0.36257971679689993+0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 2 <m|O_i|n> = (0.038248930295140204-0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 2 <m|O_i|n> = -0.08877474230050203j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 2 <m|O_i|n> = (0.12633731106718438+0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 2 <m|O_i|n> = (-0.10074178661762984+0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 2 <m|O_i|n> = (-0.02684655175686401-0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 2 <m|O_i|n> = (-0.08283739082493279+0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 2 <m|O_i|n> = (0.3923260057928669-0.03919478187918342j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 2 <m|O_i|n> = (0.3624415861043724-0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 2 <m|O_i|n> = (-0.4183550735943305+0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 3 <m|O_i|n> = (-0.10514856225699966-0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 3 <m|O_i|n> = (-0.34659118049795545+0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 3 <m|O_i|n> = (-0.12633731106718438+0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 3 <m|O_i|n> = 0.08877474230049578j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 3 <m|O_i|n> = (0.022184543949431174-0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 3 <m|O_i|n> = (-0.10169918315798984-0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 3 <m|O_i|n> = (0.36723749337520684-0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 3 <m|O_i|n> = (0.1542888160574922+0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 3 <m|O_i|n> = (0.2881093358445147-0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 3 <m|O_i|n> = (0.47972362002007574-0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 4 <m|O_i|n> = (-0.39952154976886234-0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 4 <m|O_i|n> = (-0.7303280017338201+0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 4 <m|O_i|n> = (0.10074178661762984+0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 4 <m|O_i|n> = (-0.022184543949431174-0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 4 <m|O_i|n> = -0.09970967896772773j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 4 <m|O_i|n> = (-0.18272487606257193-0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 4 <m|O_i|n> = (-0.06286133880133525+0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 4 <m|O_i|n> = (-0.0433521049880428-0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 4 <m|O_i|n> = (-0.1929499378421999+0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 4 <m|O_i|n> = (-0.20326732797675579+0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 5 <m|O_i|n> = (0.7299743898960498-0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 5 <m|O_i|n> = (-0.28286140937583465+0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 5 <m|O_i|n> = (0.02684655175686401-0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 5 <m|O_i|n> = (0.10169918315798984-0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 5 <m|O_i|n> = (0.18272487606257193-0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 5 <m|O_i|n> = 0.0997096789677192j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 5 <m|O_i|n> = (-0.03268997125804293+0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 5 <m|O_i|n> = (0.06393170961223243-0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 5 <m|O_i|n> = (0.1516169230994169-0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 5 <m|O_i|n> = (-0.28852650197103213+0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 6 <m|O_i|n> = (-0.1079398888945232+0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 6 <m|O_i|n> = (-0.011157654444734148+0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 6 <m|O_i|n> = (0.08283739082493279+0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 6 <m|O_i|n> = (-0.36723749337520684-0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 6 <m|O_i|n> = (0.06286133880133526+0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 6 <m|O_i|n> = (0.03268997125804293+0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 6 <m|O_i|n> = -0.084743541514694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 6 <m|O_i|n> = (-0.7459664745282237-0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 6 <m|O_i|n> = (0.2626980820049104-0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 6 <m|O_i|n> = (-0.1906143471188896+0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 7 <m|O_i|n> = (-0.011176837588125908+0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 7 <m|O_i|n> = (0.1079513147563266-0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 7 <m|O_i|n> = (-0.3923260057928669-0.03919478187918343j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 7 <m|O_i|n> = (-0.1542888160574922+0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 7 <m|O_i|n> = (0.0433521049880428-0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 7 <m|O_i|n> = (-0.06393170961223243-0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 7 <m|O_i|n> = (0.7459664745282237-0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 7 <m|O_i|n> = 0.08474354151470048j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 7 <m|O_i|n> = (-0.09558129479135347+0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 7 <m|O_i|n> = (-0.42300498524658753+0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 8 <m|O_i|n> = (-0.0024578261235361433-0.004162660075154389j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 8 <m|O_i|n> = (0.005061381146478604+0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 8 <m|O_i|n> = (-0.3624415861043724-0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 8 <m|O_i|n> = (-0.2881093358445147-0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 8 <m|O_i|n> = (0.1929499378421999+0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 8 <m|O_i|n> = (-0.1516169230994169-0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 8 <m|O_i|n> = (-0.2626980820049104-0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 8 <m|O_i|n> = (0.09558129479135347+0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 8 <m|O_i|n> = -0.005566666658978103j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 8 <m|O_i|n> = (0.02943919423647884+0.03957968313925758j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 6 n= 9 <m|O_i|n> = (-0.008072473007675345+0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 6 n= 9 <m|O_i|n> = (-0.004691343744251411+0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 6 n= 9 <m|O_i|n> = (0.4183550735943305+0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 6 n= 9 <m|O_i|n> = (-0.47972362002007574-0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 6 n= 9 <m|O_i|n> = (0.20326732797675579+0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 6 n= 9 <m|O_i|n> = (0.28852650197103213+0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 6 n= 9 <m|O_i|n> = (0.1906143471188896+0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 6 n= 9 <m|O_i|n> = (0.42300498524658753+0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 6 n= 9 <m|O_i|n> = (-0.02943919423647884+0.03957968313925764j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 6 n= 9 <m|O_i|n> = 0.005566666658980021j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 0 <m|O_i|n> = 0.18152595688035297j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 0 <m|O_i|n> = (0.028639196345945007-0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 0 <m|O_i|n> = (-0.02116770138968392-0.04825525393609454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 0 <m|O_i|n> = (0.05010730322945642-0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 0 <m|O_i|n> = (-0.15381473546334684+0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 0 <m|O_i|n> = (-0.10517517308083041-0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 0 <m|O_i|n> = (-0.05110098146535366+0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 0 <m|O_i|n> = (0.0849051842174164-0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 0 <m|O_i|n> = (0.10469990401488116+0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 0 <m|O_i|n> = (0.03688819234476174-0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 1 <m|O_i|n> = (-0.02863919634594501-0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 1 <m|O_i|n> = -0.18152595688033055j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 1 <m|O_i|n> = (0.06419123367213161-0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 1 <m|O_i|n> = (-0.04848423890377082+0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 1 <m|O_i|n> = (0.10394650621537767+0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 1 <m|O_i|n> = (0.25153495502676215-0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 1 <m|O_i|n> = (-0.08500843293420515+0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 1 <m|O_i|n> = (-0.050102951615375244+0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 1 <m|O_i|n> = (-0.16848113572125914-0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 1 <m|O_i|n> = (0.007089079990153322-0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 2 <m|O_i|n> = (0.02116770138968392-0.04825525393609451j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 2 <m|O_i|n> = (-0.06419123367213161-0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 2 <m|O_i|n> = 0.4199421742506643j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 2 <m|O_i|n> = (0.2954484963536589-0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 2 <m|O_i|n> = (-0.32349583884380434-0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 2 <m|O_i|n> = (-0.06015686065925241+0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 2 <m|O_i|n> = (0.18270003474434027+0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 2 <m|O_i|n> = (-0.15788055713766969+0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 2 <m|O_i|n> = (-0.025510644909081726-0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 2 <m|O_i|n> = (-0.020363163030185066-0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 3 <m|O_i|n> = (-0.05010730322945642-0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 3 <m|O_i|n> = (0.04848423890377082+0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 3 <m|O_i|n> = (-0.2954484963536589-0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 3 <m|O_i|n> = -0.4199421742506856j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 3 <m|O_i|n> = (0.09482008681064273+0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 3 <m|O_i|n> = (-0.3163773495213298+0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 3 <m|O_i|n> = (-0.24231403573602606-0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 3 <m|O_i|n> = (0.057764297407262785+0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 3 <m|O_i|n> = (-0.02722013228780784-0.020967669384589216j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 3 <m|O_i|n> = (0.017336558782344996+0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 4 <m|O_i|n> = (0.15381473546334684+0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 4 <m|O_i|n> = (-0.10394650621537767+0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 4 <m|O_i|n> = (0.32349583884380434-0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 4 <m|O_i|n> = (-0.09482008681064275+0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 4 <m|O_i|n> = 0.2579428692342511j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 4 <m|O_i|n> = (-0.17197824979204818+0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 4 <m|O_i|n> = (-0.11018302325548332-0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 4 <m|O_i|n> = (0.006705575984174358+0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 4 <m|O_i|n> = (0.07511846870045998+0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 4 <m|O_i|n> = (-0.024610915959644392-0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 5 <m|O_i|n> = (0.10517517308083041-0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 5 <m|O_i|n> = (-0.25153495502676215-0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 5 <m|O_i|n> = (0.06015686065925241+0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 5 <m|O_i|n> = (0.3163773495213298+0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 5 <m|O_i|n> = (0.17197824979204818+0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 5 <m|O_i|n> = -0.2579428692344977j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 5 <m|O_i|n> = (-0.13059976706922918-0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 5 <m|O_i|n> = (0.0963989500925435-0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 5 <m|O_i|n> = (-0.04305534325737177-0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 5 <m|O_i|n> = (-0.05009465554790803-0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 6 <m|O_i|n> = (0.05110098146535366+0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 6 <m|O_i|n> = (0.08500843293420515+0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 6 <m|O_i|n> = (-0.18270003474434027+0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 6 <m|O_i|n> = (0.24231403573602606-0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 6 <m|O_i|n> = (0.11018302325548332-0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 6 <m|O_i|n> = (0.13059976706922918-0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 6 <m|O_i|n> = 0.05756619542227479j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 6 <m|O_i|n> = (-0.010169099808647997+0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 6 <m|O_i|n> = (0.11238472248395591+0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 6 <m|O_i|n> = (0.017801587128876986+0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 7 <m|O_i|n> = (-0.0849051842174164-0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 7 <m|O_i|n> = (0.050102951615375244+0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 7 <m|O_i|n> = (0.15788055713766966+0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 7 <m|O_i|n> = (-0.057764297407262785+0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 7 <m|O_i|n> = (-0.006705575984174358+0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 7 <m|O_i|n> = (-0.0963989500925435-0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 7 <m|O_i|n> = (0.010169099808647997+0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 7 <m|O_i|n> = -0.057566195422031674j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 7 <m|O_i|n> = (-0.058144722261218404-0.05154145319066266j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 7 <m|O_i|n> = (0.015725628312653436+0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 8 <m|O_i|n> = (-0.10469990401488116+0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 8 <m|O_i|n> = (0.16848113572125914-0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 8 <m|O_i|n> = (0.025510644909081726-0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 8 <m|O_i|n> = (0.027220132287807786-0.020967669384589244j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 8 <m|O_i|n> = (-0.07511846870045998+0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 8 <m|O_i|n> = (0.04305534325737177-0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 8 <m|O_i|n> = (-0.11238472248395591+0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 8 <m|O_i|n> = (0.058144722261218404-0.05154145319066265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 8 <m|O_i|n> = (-3.469446951953614e-18-0.07837686690571478j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 8 <m|O_i|n> = (-0.764043805289339+0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 7 n= 9 <m|O_i|n> = (-0.03688819234476174-0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 7 n= 9 <m|O_i|n> = (-0.007089079990153322-0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 7 n= 9 <m|O_i|n> = (0.020363163030185066-0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 7 n= 9 <m|O_i|n> = (-0.01733655878234497+0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 7 n= 9 <m|O_i|n> = (0.024610915959644392-0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 7 n= 9 <m|O_i|n> = (0.05009465554790803-0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 7 n= 9 <m|O_i|n> = (-0.017801587128876986+0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 7 n= 9 <m|O_i|n> = (-0.015725628312653436+0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 7 n= 9 <m|O_i|n> = (0.764043805289339+0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 7 n= 9 <m|O_i|n> = 0.07837686690571694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 8 n= 0 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 8 n= 1 <m|O_i|n> = (-0.9999999999999997+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 8 n= 2 <m|O_i|n> = (-0.9999999999999996+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 8 n= 3 <m|O_i|n> = (-0.9999999999999994+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 8 n= 4 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 8 n= 5 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 8 n= 6 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 8 n= 7 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 8 n= 8 <m|O_i|n> = (-0.9999999999999992+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 8 n= 9 <m|O_i|n> = (-0.9999999999999993+2.168404344971009e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 0 <m|O_i|n> = -0.20816402115824195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 0 <m|O_i|n> = (7.582476313494624e-15-0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 0 <m|O_i|n> = (-0.1199991416064258+0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 0 <m|O_i|n> = (0.12428408971362018-0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 0 <m|O_i|n> = (0.09517536901002752+0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 0 <m|O_i|n> = (0.1500297589557808-0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 0 <m|O_i|n> = (0.07849254819570128-0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 0 <m|O_i|n> = (0.15635473887334564-0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 0 <m|O_i|n> = (-0.023075886878786686-0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 0 <m|O_i|n> = (-0.0016148023917586917-0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 1 <m|O_i|n> = (-7.580741590018647e-15-0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 1 <m|O_i|n> = 0.2081640211582704j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 1 <m|O_i|n> = (-0.07663574182305316-0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 1 <m|O_i|n> = (0.07937226287205496-0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 1 <m|O_i|n> = (0.06078239318817142-0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 1 <m|O_i|n> = (0.09581436766287788+0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 1 <m|O_i|n> = (0.050128147401979545+0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 1 <m|O_i|n> = (0.09985372595752134-0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 1 <m|O_i|n> = (-0.014737086328381478-0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 1 <m|O_i|n> = (-0.0010312705368867733+0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 2 <m|O_i|n> = (0.1199991416064258+0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 2 <m|O_i|n> = (0.07663574182305316-0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 2 <m|O_i|n> = -0.00466415215520391j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 2 <m|O_i|n> = (-1.1671219546371958e-14-0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 2 <m|O_i|n> = (-0.0013168176739623283-0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 2 <m|O_i|n> = (-0.0020757664537676968-0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 2 <m|O_i|n> = (-0.024227291658378988+0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 2 <m|O_i|n> = (-0.04826001891812842-0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 2 <m|O_i|n> = (0.642807981373904+0.06075877659398208j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 2 <m|O_i|n> = (0.044982360644067146-0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 3 <m|O_i|n> = (-0.12428408971362018-0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 3 <m|O_i|n> = (-0.07937226287205496-0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 3 <m|O_i|n> = (1.1671219546371958e-14-0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 3 <m|O_i|n> = 0.004664152155197124j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 3 <m|O_i|n> = (0.0013638388053108796-0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 3 <m|O_i|n> = (0.0021498882467853586+0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 3 <m|O_i|n> = (0.02509240357621556+0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 3 <m|O_i|n> = (0.0499832952178403+0.04461584847501186j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 3 <m|O_i|n> = (-0.6657614692589353+0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 3 <m|O_i|n> = (-0.04658859780975524-0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 4 <m|O_i|n> = (-0.09517536901002752+0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 4 <m|O_i|n> = (-0.06078239318817142-0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 4 <m|O_i|n> = (0.0013168176739623283-0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 4 <m|O_i|n> = (-0.0013638388053108796-0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 4 <m|O_i|n> = 0.3228013993397358j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 4 <m|O_i|n> = (-2.0718149418286202e-13-0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 4 <m|O_i|n> = (0.05003349724333968+0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 4 <m|O_i|n> = (0.09966518575609365+0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 4 <m|O_i|n> = (0.09121317396543802-0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 4 <m|O_i|n> = (0.0063829075022275835+0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 5 <m|O_i|n> = (-0.1500297589557808-0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 5 <m|O_i|n> = (-0.09581436766287788+0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 5 <m|O_i|n> = (0.0020757664537676968-0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 5 <m|O_i|n> = (-0.0021498882467853586+0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 5 <m|O_i|n> = (2.0718149418286202e-13-0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 5 <m|O_i|n> = -0.322801399339112j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 5 <m|O_i|n> = (0.07887033808441252-0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 5 <m|O_i|n> = (0.15710728469765847+0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 5 <m|O_i|n> = (0.14378395004906078+0.019687645290827782j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 5 <m|O_i|n> = (0.010061700668543984-0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 6 <m|O_i|n> = (-0.07849254819570128-0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 6 <m|O_i|n> = (-0.050128147401979545+0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 6 <m|O_i|n> = (0.024227291658378988+0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 6 <m|O_i|n> = (-0.02509240357621556+0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 6 <m|O_i|n> = (-0.05003349724333968+0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 6 <m|O_i|n> = (-0.07887033808441252-0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 6 <m|O_i|n> = -0.10211931959162229j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 6 <m|O_i|n> = (1.1378918640669866e-14+0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 6 <m|O_i|n> = (0.1279457092090459+0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 6 <m|O_i|n> = (0.008953373637645243-0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 7 <m|O_i|n> = (-0.15635473887334564-0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 7 <m|O_i|n> = (-0.09985372595752134-0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 7 <m|O_i|n> = (0.048260018918128395-0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 7 <m|O_i|n> = (-0.0499832952178403+0.04461584847501188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 7 <m|O_i|n> = (-0.09966518575609365+0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 7 <m|O_i|n> = (-0.15710728469765847+0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 7 <m|O_i|n> = (-1.1378918640669866e-14+0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 7 <m|O_i|n> = 0.10211931959098126j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 7 <m|O_i|n> = (0.2548639127306203+0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 7 <m|O_i|n> = (0.017834844572248626+0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 8 <m|O_i|n> = (0.023075886878786686-0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 8 <m|O_i|n> = (0.014737086328381478-0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 8 <m|O_i|n> = (-0.642807981373904+0.06075877659398211j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 8 <m|O_i|n> = (0.6657614692589353+0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 8 <m|O_i|n> = (-0.09121317396543802-0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 8 <m|O_i|n> = (-0.14378395004906078+0.01968764529082779j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 8 <m|O_i|n> = (-0.1279457092090459+0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 8 <m|O_i|n> = (-0.2548639127306203+0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 8 <m|O_i|n> = -0.05091797528286188j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 8 <m|O_i|n> = (1.3183898417423734e-14-0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 9 n= 9 <m|O_i|n> = (0.0016148023917586917-0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 9 n= 9 <m|O_i|n> = (0.0010312705368867733+0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 9 n= 9 <m|O_i|n> = (-0.044982360644067146-0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 9 n= 9 <m|O_i|n> = (0.04658859780975524-0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 9 n= 9 <m|O_i|n> = (-0.0063829075022275835+0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 9 n= 9 <m|O_i|n> = (-0.010061700668543984-0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 9 n= 9 <m|O_i|n> = (-0.008953373637645243-0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 9 n= 9 <m|O_i|n> = (-0.017834844572248626+0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 9 n= 9 <m|O_i|n> = (-1.3190837311327641e-14-0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 9 n= 9 <m|O_i|n> = (-4.336808689942018e-19+0.05091797528285752j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 0 <m|O_i|n> = 0.032895151422979364j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 0 <m|O_i|n> = (-0.25331423309151935-0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 0 <m|O_i|n> = (-0.36257971679689993-0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 0 <m|O_i|n> = (-0.10514856225699966+0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 0 <m|O_i|n> = (-0.39952154976886234+0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 0 <m|O_i|n> = (0.7299743898960498+0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 0 <m|O_i|n> = (-0.1079398888945232-0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 0 <m|O_i|n> = (-0.011176837588125908-0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 0 <m|O_i|n> = (-0.0024578261235361433+0.004162660075154382j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 0 <m|O_i|n> = (-0.008072473007675345-0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 1 <m|O_i|n> = (0.25331423309151935-0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 1 <m|O_i|n> = -0.03289515142298553j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 1 <m|O_i|n> = (0.038248930295140204+0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 1 <m|O_i|n> = (-0.34659118049795545-0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 1 <m|O_i|n> = (-0.7303280017338201-0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 1 <m|O_i|n> = (-0.28286140937583465-0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 1 <m|O_i|n> = (-0.011157654444734148-0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 1 <m|O_i|n> = (0.10795131475632662+0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 1 <m|O_i|n> = (0.005061381146478604-0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 1 <m|O_i|n> = (-0.004691343744251397-0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 2 <m|O_i|n> = (0.36257971679689993-0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 2 <m|O_i|n> = (-0.038248930295140204+0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 2 <m|O_i|n> = 0.08877474230050203j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 2 <m|O_i|n> = (-0.12633731106718438-0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 2 <m|O_i|n> = (0.10074178661762984-0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 2 <m|O_i|n> = (0.02684655175686401+0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 2 <m|O_i|n> = (0.08283739082493279-0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 2 <m|O_i|n> = (-0.3923260057928669+0.03919478187918342j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 2 <m|O_i|n> = (-0.3624415861043724+0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 2 <m|O_i|n> = (0.4183550735943305-0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 3 <m|O_i|n> = (0.10514856225699966+0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 3 <m|O_i|n> = (0.34659118049795545-0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 3 <m|O_i|n> = (0.12633731106718438-0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 3 <m|O_i|n> = -0.08877474230049578j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 3 <m|O_i|n> = (-0.022184543949431174+0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 3 <m|O_i|n> = (0.10169918315798984+0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 3 <m|O_i|n> = (-0.36723749337520684+0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 3 <m|O_i|n> = (-0.1542888160574922-0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 3 <m|O_i|n> = (-0.2881093358445147+0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 3 <m|O_i|n> = (-0.47972362002007574+0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 4 <m|O_i|n> = (0.39952154976886234+0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 4 <m|O_i|n> = (0.7303280017338201-0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 4 <m|O_i|n> = (-0.10074178661762984-0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 4 <m|O_i|n> = (0.022184543949431174+0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 4 <m|O_i|n> = 0.09970967896772773j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 4 <m|O_i|n> = (0.18272487606257193+0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 4 <m|O_i|n> = (0.06286133880133525-0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 4 <m|O_i|n> = (0.0433521049880428+0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 4 <m|O_i|n> = (0.1929499378421999-0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 4 <m|O_i|n> = (0.20326732797675579-0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 5 <m|O_i|n> = (-0.7299743898960498+0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 5 <m|O_i|n> = (0.28286140937583465-0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 5 <m|O_i|n> = (-0.02684655175686401+0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 5 <m|O_i|n> = (-0.10169918315798984+0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 5 <m|O_i|n> = (-0.18272487606257193+0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 5 <m|O_i|n> = -0.0997096789677192j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 5 <m|O_i|n> = (0.03268997125804293-0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 5 <m|O_i|n> = (-0.06393170961223243+0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 5 <m|O_i|n> = (-0.1516169230994169+0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 5 <m|O_i|n> = (0.28852650197103213-0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 6 <m|O_i|n> = (0.1079398888945232-0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 6 <m|O_i|n> = (0.011157654444734148-0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 6 <m|O_i|n> = (-0.08283739082493279-0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 6 <m|O_i|n> = (0.36723749337520684+0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 6 <m|O_i|n> = (-0.06286133880133526-0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 6 <m|O_i|n> = (-0.03268997125804293-0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 6 <m|O_i|n> = 0.084743541514694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 6 <m|O_i|n> = (0.7459664745282237+0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 6 <m|O_i|n> = (-0.2626980820049104+0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 6 <m|O_i|n> = (0.1906143471188896-0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 7 <m|O_i|n> = (0.011176837588125908-0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 7 <m|O_i|n> = (-0.1079513147563266+0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 7 <m|O_i|n> = (0.3923260057928669+0.03919478187918343j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 7 <m|O_i|n> = (0.1542888160574922-0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 7 <m|O_i|n> = (-0.0433521049880428+0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 7 <m|O_i|n> = (0.06393170961223243+0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 7 <m|O_i|n> = (-0.7459664745282237+0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 7 <m|O_i|n> = -0.08474354151470048j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 7 <m|O_i|n> = (0.09558129479135347-0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 7 <m|O_i|n> = (0.42300498524658753-0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 8 <m|O_i|n> = (0.0024578261235361433+0.004162660075154389j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 8 <m|O_i|n> = (-0.005061381146478604-0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 8 <m|O_i|n> = (0.3624415861043724+0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 8 <m|O_i|n> = (0.2881093358445147+0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 8 <m|O_i|n> = (-0.1929499378421999-0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 8 <m|O_i|n> = (0.1516169230994169+0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 8 <m|O_i|n> = (0.2626980820049104+0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 8 <m|O_i|n> = (-0.09558129479135347-0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 8 <m|O_i|n> = 0.005566666658978103j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 8 <m|O_i|n> = (-0.02943919423647884-0.03957968313925758j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 10 n= 9 <m|O_i|n> = (0.008072473007675345-0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 10 n= 9 <m|O_i|n> = (0.004691343744251411-0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 10 n= 9 <m|O_i|n> = (-0.4183550735943305-0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 10 n= 9 <m|O_i|n> = (0.47972362002007574+0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 10 n= 9 <m|O_i|n> = (-0.20326732797675579-0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 10 n= 9 <m|O_i|n> = (-0.28852650197103213-0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 10 n= 9 <m|O_i|n> = (-0.1906143471188896-0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 10 n= 9 <m|O_i|n> = (-0.42300498524658753-0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 10 n= 9 <m|O_i|n> = (0.02943919423647884-0.03957968313925764j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 10 n= 9 <m|O_i|n> = -0.005566666658980021j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 0 <m|O_i|n> = -0.18152595688035297j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 0 <m|O_i|n> = (-0.028639196345945007+0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 0 <m|O_i|n> = (0.02116770138968392+0.04825525393609454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 0 <m|O_i|n> = (-0.05010730322945642+0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 0 <m|O_i|n> = (0.15381473546334684-0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 0 <m|O_i|n> = (0.10517517308083041+0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 0 <m|O_i|n> = (0.05110098146535366-0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 0 <m|O_i|n> = (-0.0849051842174164+0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 0 <m|O_i|n> = (-0.10469990401488116-0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 0 <m|O_i|n> = (-0.03688819234476174+0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 1 <m|O_i|n> = (0.02863919634594501+0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 1 <m|O_i|n> = 0.18152595688033055j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 1 <m|O_i|n> = (-0.06419123367213161+0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 1 <m|O_i|n> = (0.04848423890377082-0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 1 <m|O_i|n> = (-0.10394650621537767-0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 1 <m|O_i|n> = (-0.25153495502676215+0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 1 <m|O_i|n> = (0.08500843293420515-0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 1 <m|O_i|n> = (0.050102951615375244-0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 1 <m|O_i|n> = (0.16848113572125914+0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 1 <m|O_i|n> = (-0.007089079990153322+0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 2 <m|O_i|n> = (-0.02116770138968392+0.04825525393609451j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 2 <m|O_i|n> = (0.06419123367213161+0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 2 <m|O_i|n> = -0.4199421742506643j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 2 <m|O_i|n> = (-0.2954484963536589+0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 2 <m|O_i|n> = (0.32349583884380434+0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 2 <m|O_i|n> = (0.06015686065925241-0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 2 <m|O_i|n> = (-0.18270003474434027-0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 2 <m|O_i|n> = (0.15788055713766969-0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 2 <m|O_i|n> = (0.025510644909081726+0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 2 <m|O_i|n> = (0.020363163030185066+0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 3 <m|O_i|n> = (0.05010730322945642+0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 3 <m|O_i|n> = (-0.04848423890377082-0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 3 <m|O_i|n> = (0.2954484963536589+0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 3 <m|O_i|n> = 0.4199421742506856j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 3 <m|O_i|n> = (-0.09482008681064273-0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 3 <m|O_i|n> = (0.3163773495213298-0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 3 <m|O_i|n> = (0.24231403573602606+0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 3 <m|O_i|n> = (-0.057764297407262785-0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 3 <m|O_i|n> = (0.02722013228780784+0.020967669384589216j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 3 <m|O_i|n> = (-0.017336558782344996-0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 4 <m|O_i|n> = (-0.15381473546334684-0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 4 <m|O_i|n> = (0.10394650621537767-0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 4 <m|O_i|n> = (-0.32349583884380434+0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 4 <m|O_i|n> = (0.09482008681064275-0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 4 <m|O_i|n> = -0.2579428692342511j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 4 <m|O_i|n> = (0.17197824979204818-0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 4 <m|O_i|n> = (0.11018302325548332+0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 4 <m|O_i|n> = (-0.006705575984174358-0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 4 <m|O_i|n> = (-0.07511846870045998-0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 4 <m|O_i|n> = (0.024610915959644392+0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 5 <m|O_i|n> = (-0.10517517308083041+0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 5 <m|O_i|n> = (0.25153495502676215+0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 5 <m|O_i|n> = (-0.06015686065925241-0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 5 <m|O_i|n> = (-0.3163773495213298-0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 5 <m|O_i|n> = (-0.17197824979204818-0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 5 <m|O_i|n> = 0.2579428692344977j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 5 <m|O_i|n> = (0.13059976706922918+0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 5 <m|O_i|n> = (-0.0963989500925435+0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 5 <m|O_i|n> = (0.04305534325737177+0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 5 <m|O_i|n> = (0.05009465554790803+0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 6 <m|O_i|n> = (-0.05110098146535366-0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 6 <m|O_i|n> = (-0.08500843293420515-0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 6 <m|O_i|n> = (0.18270003474434027-0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 6 <m|O_i|n> = (-0.24231403573602606+0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 6 <m|O_i|n> = (-0.11018302325548332+0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 6 <m|O_i|n> = (-0.13059976706922918+0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 6 <m|O_i|n> = -0.05756619542227479j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 6 <m|O_i|n> = (0.010169099808647997-0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 6 <m|O_i|n> = (-0.11238472248395591-0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 6 <m|O_i|n> = (-0.017801587128876986-0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 7 <m|O_i|n> = (0.0849051842174164+0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 7 <m|O_i|n> = (-0.050102951615375244-0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 7 <m|O_i|n> = (-0.15788055713766966-0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 7 <m|O_i|n> = (0.057764297407262785-0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 7 <m|O_i|n> = (0.006705575984174358-0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 7 <m|O_i|n> = (0.0963989500925435+0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 7 <m|O_i|n> = (-0.010169099808647997-0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 7 <m|O_i|n> = 0.057566195422031674j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 7 <m|O_i|n> = (0.058144722261218404+0.05154145319066266j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 7 <m|O_i|n> = (-0.015725628312653436-0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 8 <m|O_i|n> = (0.10469990401488116-0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 8 <m|O_i|n> = (-0.16848113572125914+0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 8 <m|O_i|n> = (-0.025510644909081726+0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 8 <m|O_i|n> = (-0.027220132287807786+0.020967669384589244j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 8 <m|O_i|n> = (0.07511846870045998-0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 8 <m|O_i|n> = (-0.04305534325737177+0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 8 <m|O_i|n> = (0.11238472248395591-0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 8 <m|O_i|n> = (-0.058144722261218404+0.05154145319066265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 8 <m|O_i|n> = (3.469446951953614e-18+0.07837686690571478j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 8 <m|O_i|n> = (0.764043805289339-0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 11 n= 9 <m|O_i|n> = (0.03688819234476174+0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 11 n= 9 <m|O_i|n> = (0.007089079990153322+0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 11 n= 9 <m|O_i|n> = (-0.020363163030185066+0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 11 n= 9 <m|O_i|n> = (0.01733655878234497-0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 11 n= 9 <m|O_i|n> = (-0.024610915959644392+0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 11 n= 9 <m|O_i|n> = (-0.05009465554790803+0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 11 n= 9 <m|O_i|n> = (0.017801587128876986-0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 11 n= 9 <m|O_i|n> = (0.015725628312653436-0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 11 n= 9 <m|O_i|n> = (-0.764043805289339-0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 11 n= 9 <m|O_i|n> = -0.07837686690571694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 12 n= 0 <m|O_i|n> = (-1.0000000000000002+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 12 n= 1 <m|O_i|n> = (-0.9999999999999997+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 12 n= 2 <m|O_i|n> = (-0.9999999999999996+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 12 n= 3 <m|O_i|n> = (-0.9999999999999994+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 12 n= 4 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 12 n= 5 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 12 n= 6 <m|O_i|n> = (-1+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 12 n= 7 <m|O_i|n> = (-1.0000000000000004+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 12 n= 8 <m|O_i|n> = (-0.9999999999999992+0j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 12 n= 9 <m|O_i|n> = (-0.9999999999999993+2.168404344971009e-19j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 0 <m|O_i|n> = -0.20816402115824195j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 0 <m|O_i|n> = (7.582476313494624e-15-0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 0 <m|O_i|n> = (-0.1199991416064258+0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 0 <m|O_i|n> = (0.12428408971362018-0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 0 <m|O_i|n> = (0.09517536901002752+0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 0 <m|O_i|n> = (0.1500297589557808-0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 0 <m|O_i|n> = (0.07849254819570128-0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 0 <m|O_i|n> = (0.15635473887334564-0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 0 <m|O_i|n> = (-0.023075886878786686-0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 0 <m|O_i|n> = (-0.0016148023917586917-0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 1 <m|O_i|n> = (-7.580741590018647e-15-0.44901544497760504j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 1 <m|O_i|n> = 0.2081640211582704j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 1 <m|O_i|n> = (-0.07663574182305316-0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 1 <m|O_i|n> = (0.07937226287205496-0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 1 <m|O_i|n> = (0.06078239318817142-0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 1 <m|O_i|n> = (0.09581436766287788+0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 1 <m|O_i|n> = (0.050128147401979545+0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 1 <m|O_i|n> = (0.09985372595752134-0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 1 <m|O_i|n> = (-0.014737086328381478-0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 1 <m|O_i|n> = (-0.0010312705368867733+0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 2 <m|O_i|n> = (0.1199991416064258+0.24335573812637545j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 2 <m|O_i|n> = (0.07663574182305316-0.09991822462028495j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 2 <m|O_i|n> = -0.00466415215520391j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 2 <m|O_i|n> = (-1.1671219546371958e-14-0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 2 <m|O_i|n> = (-0.0013168176739623283-0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 2 <m|O_i|n> = (-0.0020757664537676968-0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 2 <m|O_i|n> = (-0.024227291658378988+0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 2 <m|O_i|n> = (-0.04826001891812842-0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 2 <m|O_i|n> = (0.642807981373904+0.06075877659398208j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 2 <m|O_i|n> = (0.044982360644067146-0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 3 <m|O_i|n> = (-0.12428408971362018-0.02025224876645768j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 3 <m|O_i|n> = (-0.07937226287205496-0.2594645508578959j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 3 <m|O_i|n> = (1.1671219546371958e-14-0.13290984686669188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 3 <m|O_i|n> = 0.004664152155197124j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 3 <m|O_i|n> = (0.0013638388053108796-0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 3 <m|O_i|n> = (0.0021498882467853586+0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 3 <m|O_i|n> = (0.02509240357621556+0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 3 <m|O_i|n> = (0.0499832952178403+0.04461584847501186j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 3 <m|O_i|n> = (-0.6657614692589353+0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 3 <m|O_i|n> = (-0.04658859780975524-0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 4 <m|O_i|n> = (-0.09517536901002752+0.03494090252090219j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 4 <m|O_i|n> = (-0.06078239318817142-0.3115710564294205j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 4 <m|O_i|n> = (0.0013168176739623283-0.04947647230485247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 4 <m|O_i|n> = (-0.0013638388053108796-0.010217830031585051j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 4 <m|O_i|n> = 0.3228013993397358j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 4 <m|O_i|n> = (-2.0718149418286202e-13-0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 4 <m|O_i|n> = (0.05003349724333968+0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 4 <m|O_i|n> = (0.09966518575609365+0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 4 <m|O_i|n> = (0.09121317396543802-0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 4 <m|O_i|n> = (0.0063829075022275835+0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 5 <m|O_i|n> = (-0.1500297589557808-0.27975363081498006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 5 <m|O_i|n> = (-0.09581436766287788+0.03314852160385069j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 5 <m|O_i|n> = (0.0020757664537676968-0.010097291739491893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 5 <m|O_i|n> = (-0.0021498882467853586+0.049447277994362576j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 5 <m|O_i|n> = (2.0718149418286202e-13-0.6853721412262801j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 5 <m|O_i|n> = -0.322801399339112j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 5 <m|O_i|n> = (0.07887033808441252-0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 5 <m|O_i|n> = (0.15710728469765847+0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 5 <m|O_i|n> = (0.14378395004906078+0.019687645290827782j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 5 <m|O_i|n> = (0.010061700668543984-0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 6 <m|O_i|n> = (-0.07849254819570128-0.627744295429802j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 6 <m|O_i|n> = (-0.050128147401979545+0.387692527196247j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 6 <m|O_i|n> = (0.024227291658378988+0.06246552709202874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 6 <m|O_i|n> = (-0.02509240357621556+0.15526869730544993j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 6 <m|O_i|n> = (-0.05003349724333968+0.5191909844283518j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 6 <m|O_i|n> = (-0.07887033808441252-0.06921609238542972j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 6 <m|O_i|n> = -0.10211931959162229j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 6 <m|O_i|n> = (1.1378918640669866e-14+0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 6 <m|O_i|n> = (0.1279457092090459+0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 6 <m|O_i|n> = (0.008953373637645243-0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 7 <m|O_i|n> = (-0.15635473887334564-0.3582897185762747j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 7 <m|O_i|n> = (-0.09985372595752134-0.6247025003787181j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 7 <m|O_i|n> = (0.048260018918128395-0.1496962513030781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 7 <m|O_i|n> = (-0.0499832952178403+0.04461584847501188j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 7 <m|O_i|n> = (-0.09966518575609365+0.03283669323953399j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 7 <m|O_i|n> = (-0.15710728469765847+0.49737302927796206j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 7 <m|O_i|n> = (-1.1378918640669866e-14+0.1370771981410577j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 7 <m|O_i|n> = 0.10211931959098126j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 7 <m|O_i|n> = (0.2548639127306203+0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 7 <m|O_i|n> = (0.017834844572248626+0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 8 <m|O_i|n> = (0.023075886878786686-0.021245390037384605j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 8 <m|O_i|n> = (0.014737086328381478-0.01675650216223781j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 8 <m|O_i|n> = (-0.642807981373904+0.06075877659398211j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 8 <m|O_i|n> = (0.6657614692589353+0.030328805526540544j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 8 <m|O_i|n> = (-0.09121317396543802-0.0016815231419375666j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 8 <m|O_i|n> = (-0.14378395004906078+0.01968764529082779j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 8 <m|O_i|n> = (-0.1279457092090459+0.08917958008313814j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 8 <m|O_i|n> = (-0.2548639127306203+0.12712016076597246j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 8 <m|O_i|n> = -0.05091797528286188j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 8 <m|O_i|n> = (1.3183898417423734e-14-0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 13 n= 9 <m|O_i|n> = (0.0016148023917586917-0.022256560637208975j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 13 n= 9 <m|O_i|n> = (0.0010312705368867733+0.031349635311513455j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 13 n= 9 <m|O_i|n> = (-0.044982360644067146-0.6649321451286361j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 13 n= 9 <m|O_i|n> = (0.04658859780975524-0.6439900871949131j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 13 n= 9 <m|O_i|n> = (-0.0063829075022275835+0.14498512392850374j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 13 n= 9 <m|O_i|n> = (-0.010061700668543984-0.09067211701828733j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 13 n= 9 <m|O_i|n> = (-0.008953373637645243-0.2846664475944938j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 13 n= 9 <m|O_i|n> = (-0.017834844572248626+0.15493553603975127j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 13 n= 9 <m|O_i|n> = (-1.3190837311327641e-14-0.0071613356365938935j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 13 n= 9 <m|O_i|n> = (-4.336808689942018e-19+0.05091797528285752j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 0 <m|O_i|n> = 0.032895151422979364j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 0 <m|O_i|n> = (-0.25331423309151935-0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 0 <m|O_i|n> = (-0.36257971679689993-0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 0 <m|O_i|n> = (-0.10514856225699966+0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 0 <m|O_i|n> = (-0.39952154976886234+0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 0 <m|O_i|n> = (0.7299743898960498+0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 0 <m|O_i|n> = (-0.1079398888945232-0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 0 <m|O_i|n> = (-0.011176837588125908-0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 0 <m|O_i|n> = (-0.0024578261235361433+0.004162660075154382j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 0 <m|O_i|n> = (-0.008072473007675345-0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 1 <m|O_i|n> = (0.25331423309151935-0.015250225963074543j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 1 <m|O_i|n> = -0.03289515142298553j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 1 <m|O_i|n> = (0.038248930295140204+0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 1 <m|O_i|n> = (-0.34659118049795545-0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 1 <m|O_i|n> = (-0.7303280017338201-0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 1 <m|O_i|n> = (-0.28286140937583465-0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 1 <m|O_i|n> = (-0.011157654444734148-0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 1 <m|O_i|n> = (0.10795131475632662+0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 1 <m|O_i|n> = (0.005061381146478604-0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 1 <m|O_i|n> = (-0.004691343744251397-0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 2 <m|O_i|n> = (0.36257971679689993-0.12043358963162294j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 2 <m|O_i|n> = (-0.038248930295140204+0.11279038008573597j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 2 <m|O_i|n> = 0.08877474230050203j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 2 <m|O_i|n> = (-0.12633731106718438-0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 2 <m|O_i|n> = (0.10074178661762984-0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 2 <m|O_i|n> = (0.02684655175686401+0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 2 <m|O_i|n> = (0.08283739082493279-0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 2 <m|O_i|n> = (-0.3923260057928669+0.03919478187918342j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 2 <m|O_i|n> = (-0.3624415861043724+0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 2 <m|O_i|n> = (0.4183550735943305-0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 3 <m|O_i|n> = (0.10514856225699966+0.055932373129483834j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 3 <m|O_i|n> = (0.34659118049795545-0.1607571278204863j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 3 <m|O_i|n> = (0.12633731106718438-0.0031153365637544006j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 3 <m|O_i|n> = -0.08877474230049578j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 3 <m|O_i|n> = (-0.022184543949431174+0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 3 <m|O_i|n> = (0.10169918315798984+0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 3 <m|O_i|n> = (-0.36723749337520684+0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 3 <m|O_i|n> = (-0.1542888160574922-0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 3 <m|O_i|n> = (-0.2881093358445147+0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 3 <m|O_i|n> = (-0.47972362002007574+0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 4 <m|O_i|n> = (0.39952154976886234+0.04197731587843954j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 4 <m|O_i|n> = (0.7303280017338201-0.25980901534903855j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 4 <m|O_i|n> = (-0.10074178661762984-0.01720702741568606j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 4 <m|O_i|n> = (0.022184543949431174+0.0673751967112106j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 4 <m|O_i|n> = 0.09970967896772773j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 4 <m|O_i|n> = (0.18272487606257193+0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 4 <m|O_i|n> = (0.06286133880133525-0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 4 <m|O_i|n> = (0.0433521049880428+0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 4 <m|O_i|n> = (0.1929499378421999-0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 4 <m|O_i|n> = (0.20326732797675579-0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 5 <m|O_i|n> = (-0.7299743898960498+0.26080089085157854j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 5 <m|O_i|n> = (0.28286140937583465-0.28525249668311115j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 5 <m|O_i|n> = (-0.02684655175686401+0.06565694008153417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 5 <m|O_i|n> = (-0.10169918315798984+0.010112641018139417j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 5 <m|O_i|n> = (-0.18272487606257193+0.046961967028367524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 5 <m|O_i|n> = -0.0997096789677192j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 5 <m|O_i|n> = (0.03268997125804293-0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 5 <m|O_i|n> = (-0.06393170961223243+0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 5 <m|O_i|n> = (-0.1516169230994169+0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 5 <m|O_i|n> = (0.28852650197103213-0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 6 <m|O_i|n> = (0.1079398888945232-0.015411387813557687j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 6 <m|O_i|n> = (0.011157654444734148-0.0016575540190031236j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 6 <m|O_i|n> = (-0.08283739082493279-0.17704842063755874j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 6 <m|O_i|n> = (0.36723749337520684+0.14350104253086676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 6 <m|O_i|n> = (-0.06286133880133526-0.015544506820900257j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 6 <m|O_i|n> = (-0.03268997125804293-0.033910121348264655j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 6 <m|O_i|n> = 0.084743541514694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 6 <m|O_i|n> = (0.7459664745282237+0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 6 <m|O_i|n> = (-0.2626980820049104+0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 6 <m|O_i|n> = (0.1906143471188896-0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 7 <m|O_i|n> = (0.011176837588125908-0.00152283931393611j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 7 <m|O_i|n> = (-0.1079513147563266+0.015331149053216094j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 7 <m|O_i|n> = (0.3923260057928669+0.03919478187918343j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 7 <m|O_i|n> = (0.1542888160574922-0.12001307349005896j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 7 <m|O_i|n> = (-0.0433521049880428+0.0184153616265712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 7 <m|O_i|n> = (0.06393170961223243+0.010291555482081388j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 7 <m|O_i|n> = (-0.7459664745282237+0.06313196444485561j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 7 <m|O_i|n> = -0.08474354151470048j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 7 <m|O_i|n> = (0.09558129479135347-0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 7 <m|O_i|n> = (0.42300498524658753-0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 8 <m|O_i|n> = (0.0024578261235361433+0.004162660075154389j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 8 <m|O_i|n> = (-0.005061381146478604-0.0063444523900360525j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 8 <m|O_i|n> = (0.3624415861043724+0.47185662181882804j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 8 <m|O_i|n> = (0.2881093358445147+0.41211047728968275j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 8 <m|O_i|n> = (-0.1929499378421999-0.271936318996463j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 8 <m|O_i|n> = (0.1516169230994169+0.19013125143549364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 8 <m|O_i|n> = (0.2626980820049104+0.33896394468147456j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 8 <m|O_i|n> = (-0.09558129479135347-0.16502333294748273j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 8 <m|O_i|n> = 0.005566666658978103j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 8 <m|O_i|n> = (-0.02943919423647884-0.03957968313925758j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 14 n= 9 <m|O_i|n> = (0.008072473007675345-0.0008395443878509786j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 14 n= 9 <m|O_i|n> = (0.004691343744251411-0.0011661655235990095j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 14 n= 9 <m|O_i|n> = (-0.4183550735943305-0.27896427601141893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 14 n= 9 <m|O_i|n> = (0.47972362002007574+0.35196281520491524j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 14 n= 9 <m|O_i|n> = (-0.20326732797675579-0.13349148856672827j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 14 n= 9 <m|O_i|n> = (-0.28852650197103213-0.1671271903767325j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 14 n= 9 <m|O_i|n> = (-0.1906143471188896-0.005886850043846609j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 14 n= 9 <m|O_i|n> = (-0.42300498524658753-0.07052390048410039j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 14 n= 9 <m|O_i|n> = (0.02943919423647884-0.03957968313925764j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 14 n= 9 <m|O_i|n> = -0.005566666658980021j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 0 <m|O_i|n> = -0.18152595688035297j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 0 <m|O_i|n> = (-0.028639196345945007+0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 0 <m|O_i|n> = (0.02116770138968392+0.04825525393609454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 0 <m|O_i|n> = (-0.05010730322945642+0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 0 <m|O_i|n> = (0.15381473546334684-0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 0 <m|O_i|n> = (0.10517517308083041+0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 0 <m|O_i|n> = (0.05110098146535366-0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 0 <m|O_i|n> = (-0.0849051842174164+0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 0 <m|O_i|n> = (-0.10469990401488116-0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 0 <m|O_i|n> = (-0.03688819234476174+0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 1 <m|O_i|n> = (0.02863919634594501+0.08415561992686395j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 1 <m|O_i|n> = 0.18152595688033055j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 1 <m|O_i|n> = (-0.06419123367213161+0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 1 <m|O_i|n> = (0.04848423890377082-0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 1 <m|O_i|n> = (-0.10394650621537767-0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 1 <m|O_i|n> = (-0.25153495502676215+0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 1 <m|O_i|n> = (0.08500843293420515-0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 1 <m|O_i|n> = (0.050102951615375244-0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 1 <m|O_i|n> = (0.16848113572125914+0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 1 <m|O_i|n> = (-0.007089079990153322+0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 2 <m|O_i|n> = (-0.02116770138968392+0.04825525393609451j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 2 <m|O_i|n> = (0.06419123367213161+0.14133987876801118j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 2 <m|O_i|n> = -0.4199421742506643j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 2 <m|O_i|n> = (-0.2954484963536589+0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 2 <m|O_i|n> = (0.32349583884380434+0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 2 <m|O_i|n> = (0.06015686065925241-0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 2 <m|O_i|n> = (-0.18270003474434027-0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 2 <m|O_i|n> = (0.15788055713766969-0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 2 <m|O_i|n> = (0.025510644909081726+0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 2 <m|O_i|n> = (0.020363163030185066+0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 3 <m|O_i|n> = (0.05010730322945642+0.1469242456967777j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 3 <m|O_i|n> = (-0.04848423890377082-0.02063782189288712j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 3 <m|O_i|n> = (0.2954484963536589+0.014736862943214454j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 3 <m|O_i|n> = 0.4199421742506856j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 3 <m|O_i|n> = (-0.09482008681064273-0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 3 <m|O_i|n> = (0.3163773495213298-0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 3 <m|O_i|n> = (0.24231403573602606+0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 3 <m|O_i|n> = (-0.057764297407262785-0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 3 <m|O_i|n> = (0.02722013228780784+0.020967669384589216j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 3 <m|O_i|n> = (-0.017336558782344996-0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 4 <m|O_i|n> = (-0.15381473546334684-0.5859187067236963j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 4 <m|O_i|n> = (0.10394650621537767-0.039000001349845166j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 4 <m|O_i|n> = (-0.32349583884380434+0.0903524486707679j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 4 <m|O_i|n> = (0.09482008681064275-0.49184853934154893j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 4 <m|O_i|n> = -0.2579428692342511j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 4 <m|O_i|n> = (0.17197824979204818-0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 4 <m|O_i|n> = (0.11018302325548332+0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 4 <m|O_i|n> = (-0.006705575984174358-0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 4 <m|O_i|n> = (-0.07511846870045998-0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 4 <m|O_i|n> = (0.024610915959644392+0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 5 <m|O_i|n> = (-0.10517517308083041+0.03555361060573287j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 5 <m|O_i|n> = (0.25153495502676215+0.5510806385037448j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 5 <m|O_i|n> = (-0.06015686065925241-0.497279585978622j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 5 <m|O_i|n> = (-0.3163773495213298-0.11277630708615201j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 5 <m|O_i|n> = (-0.17197824979204818-0.12148774969114759j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 5 <m|O_i|n> = 0.2579428692344977j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 5 <m|O_i|n> = (0.13059976706922918+0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 5 <m|O_i|n> = (-0.0963989500925435+0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 5 <m|O_i|n> = (0.04305534325737177+0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 5 <m|O_i|n> = (0.05009465554790803+0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 6 <m|O_i|n> = (-0.05110098146535366-0.35528411272582366j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 6 <m|O_i|n> = (-0.08500843293420515-0.5966066413516261j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 6 <m|O_i|n> = (0.18270003474434027-0.48484368858482846j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 6 <m|O_i|n> = (-0.24231403573602606+0.12738850974689053j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 6 <m|O_i|n> = (-0.11018302325548332+0.012776205349343147j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 6 <m|O_i|n> = (-0.13059976706922918+0.32429713426009843j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 6 <m|O_i|n> = -0.05756619542227479j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 6 <m|O_i|n> = (0.010169099808647997-0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 6 <m|O_i|n> = (-0.11238472248395591-0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 6 <m|O_i|n> = (-0.017801587128876986-0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 7 <m|O_i|n> = (0.0849051842174164+0.5966213437915482j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 7 <m|O_i|n> = (-0.050102951615375244-0.35542623046391364j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 7 <m|O_i|n> = (-0.15788055713766966-0.22364626982800756j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 7 <m|O_i|n> = (0.057764297407262785-0.5148941551437676j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 7 <m|O_i|n> = (0.006705575984174358-0.3495425091438763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 7 <m|O_i|n> = (0.0963989500925435+0.05487050626605794j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 7 <m|O_i|n> = (-0.010169099808647997-0.04288547466469112j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 7 <m|O_i|n> = 0.057566195422031674j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 7 <m|O_i|n> = (0.058144722261218404+0.05154145319066266j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 7 <m|O_i|n> = (-0.015725628312653436-0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 8 <m|O_i|n> = (0.10469990401488116-0.09301457006112213j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 8 <m|O_i|n> = (-0.16848113572125914+0.11394101830268995j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 8 <m|O_i|n> = (-0.025510644909081726+0.017902676809172763j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 8 <m|O_i|n> = (-0.027220132287807786+0.020967669384589244j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 8 <m|O_i|n> = (0.07511846870045998-0.05724452854042631j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 8 <m|O_i|n> = (-0.04305534325737177+0.028691528189451886j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 8 <m|O_i|n> = (0.11238472248395591-0.07840142560500751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 8 <m|O_i|n> = (-0.058144722261218404+0.05154145319066265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 8 <m|O_i|n> = (3.469446951953614e-18+0.07837686690571478j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 8 <m|O_i|n> = (0.764043805289339-0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 0 O_i 15 n= 9 <m|O_i|n> = (0.03688819234476174+0.20001927409956355j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 1 O_i 15 n= 9 <m|O_i|n> = (0.007089079990153322+0.1398696717994019j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 2 O_i 15 n= 9 <m|O_i|n> = (-0.020363163030185066+0.02767526607989751j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 3 O_i 15 n= 9 <m|O_i|n> = (0.01733655878234497-0.025898698233632833j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 4 O_i 15 n= 9 <m|O_i|n> = (-0.024610915959644392+0.045511198495320426j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 5 O_i 15 n= 9 <m|O_i|n> = (-0.05009465554790803+0.08006401109885218j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 6 O_i 15 n= 9 <m|O_i|n> = (0.017801587128876986-0.07563354824110663j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 7 O_i 15 n= 9 <m|O_i|n> = (0.015725628312653436-0.13612425940617265j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 8 O_i 15 n= 9 <m|O_i|n> = (-0.764043805289339-0.5572691428492735j)
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     
WARNING:  m= 9 O_i 15 n= 9 <m|O_i|n> = -0.07837686690571694j
      error_ham_irr = 2.220446049250313e-16
      error_ham = 2.220446049250313e-16
     

** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 
CHECK: the degeneracy of irreps :
      j = 0 deg= 10 logic: True label =  GM5d
      j = 1 deg= 10 logic: True label =  GM5d
      j = 2 deg= 10 logic: True label =  GM5d
      j = 3 deg= 10 logic: True label =  GM5d
      j = 4 deg= 10 logic: True label =  GM5d
      j = 5 deg= 10 logic: True label =  GM5d
      j = 6 deg= 10 logic: True label =  GM5d
      j = 7 deg= 10 logic: True label =  GM5d
      j = 8 deg= 10 logic: True label =  GM5d
      j = 9 deg= 10 logic: True label =  GM5d
** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 
           * the basis only in a single irreps and can do the docomposition in energy degenerate space
** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 
CHECK: the degeneracy of irreps :
             band index :  0
      j = 0 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  1
      j = 1 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  2
      j = 2 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  3
      j = 3 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  4
      j = 4 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  5
      j = 5 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  6
      j = 6 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  7
      j = 7 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  8
      j = 8 deg= 10 logic: False label =  ['GM5d', 2, 0]
             band index :  9
      j = 9 deg= 10 logic: False label =  ['GM5d', 2, 0]
Degeneracy:  
 5
Degeneracy:  
 [{'start': 0, 'energy': 12.719672580695164, 'degeneracy': 2, 'irrep': 'GM5d'}, {'start': 2, 'energy': 12.74775874164043, 'degeneracy': 2, 'irrep': 'GM5d'}, {'start': 4, 'energy': 13.322145889611194, 'degeneracy': 2, 'irrep': 'GM5d'}, {'start': 6, 'energy': 13.327469002109009, 'degeneracy': 2, 'irrep': 'GM5d'}, {'start': 8, 'energy': 13.361862785944176, 'degeneracy': 2, 'irrep': 'GM5d'}]
* * * * * * * * * * * * * * * * * * * * 
|*| the label of final basis of irreps :
 [['GM5d', 2, 0], ['GM5d', 2, 1], ['GM5d', 2, 0], ['GM5d', 2, 1], ['GM5d', 2, 0], ['GM5d', 2, 1], ['GM5d', 2, 0], ['GM5d', 2, 1], ['GM5d', 2, 0], ['GM5d', 2, 1]]
* * * * * * * * * * * * * * * * * * * * 
Deg(from 0)             :  0
     band index :  0
     band index :  1
logical                 :  [False, False]   Deg:  [10, 10]
>>> index for multi of basis decomposition(from 0) : 0
>>> decomposition matrix original :
 [[-0.10562373+0.j          0.16538962-0.j        ]
 [-0.16372099-0.02343428j -0.10455808-0.01496597j]]
>>> decomposition matrix :
 [[-2.74275393-1.90676991e-13j -4.251378  +6.08522885e-01j]
 [ 4.29470779-1.21781670e-13j -2.71508198+3.88624469e-01j]]
Deg(from 0)             :  1
     band index :  2
     band index :  3
logical                 :  [False, False]   Deg:  [10, 10]
>>> index for multi of basis decomposition(from 0) : 0
>>> decomposition matrix original :
 [[ 0.41684035+0.j          0.40246892+0.j        ]
 [-0.32923319+0.23148809j  0.34098951-0.23975411j]]
>>> decomposition matrix :
 [[ 1.24156769-9.57881441e-15j -0.98062796-6.89492129e-01j]
 [ 1.19876211+9.85092216e-15j  1.01564438+7.14112621e-01j]]
Deg(from 0)             :  2
     band index :  4
     band index :  5
logical                 :  [False, False]   Deg:  [10, 10]
>>> index for multi of basis decomposition(from 0) : 0
>>> decomposition matrix original :
 [[-0.11296999+0.j          0.07166552+0.j        ]
 [-0.06136649+0.03701486j -0.09673511+0.0583484j ]]
>>> decomposition matrix :
 [[-6.31181988-1.93060801e-12j -3.42864734-2.06808144e+00j]
 [ 4.00407086-3.04331528e-12j -5.40475062-3.26002162e+00j]]
Deg(from 0)             :  3
     band index :  6
     band index :  7
logical                 :  [False, False]   Deg:  [10, 10]
>>> index for multi of basis decomposition(from 0) : 2
>>> decomposition matrix original :
 [[ 7.44171364e-16+0.31280368j  1.48270906e-15-0.15703239j]
 [-2.20255031e-02-0.15548006j -4.38741239e-02-0.30971149j]]
>>> decomposition matrix :
 [[ 6.17538013e-14-2.55338865j -1.79792222e-01+1.26916989j]
 [ 1.23014467e-13+1.28184143j -3.58140570e-01+2.52814733j]]
Deg(from 0)             :  4
     band index :  8
     band index :  9
logical                 :  [False, False]   Deg:  [10, 10]
>>> index for multi of basis decomposition(from 0) : 0
>>> decomposition matrix original :
 [[ 0.04888731+0.j         -0.69861059+0.j        ]
 [ 0.41430736+0.56249993j  0.02899236+0.03936257j]]
>>> decomposition matrix :
 [[ 0.09967915+8.53206966e-15j  0.84475507-1.14691342e+00j]
 [-1.42443726+5.97270354e-16j  0.0591142 -8.02586067e-02j]]
CHECK: the degeneracy of irreps :
             band index :  0
      j = 0 deg= 5 logic: True label =  ['GM5d', 2, 0]
             band index :  1
      j = 1 deg= 5 logic: True label =  ['GM5d', 2, 1]
             band index :  2
      j = 2 deg= 5 logic: True label =  ['GM5d', 2, 0]
             band index :  3
      j = 3 deg= 5 logic: True label =  ['GM5d', 2, 1]
             band index :  4
      j = 4 deg= 5 logic: True label =  ['GM5d', 2, 0]
             band index :  5
      j = 5 deg= 5 logic: True label =  ['GM5d', 2, 1]
             band index :  6
      j = 6 deg= 5 logic: True label =  ['GM5d', 2, 0]
             band index :  7
      j = 7 deg= 5 logic: True label =  ['GM5d', 2, 1]
             band index :  8
      j = 8 deg= 5 logic: True label =  ['GM5d', 2, 0]
             band index :  9
      j = 9 deg= 5 logic: True label =  ['GM5d', 2, 1]
      characters:
 [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
      multi for  GM1+ is  0
      characters:
 [ 1.  1.  1.  1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1.]
      multi for  GM1- is  0
      characters:
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.]
      multi for  GM2+ is  0
      characters:
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1.  1.  1.]
      multi for  GM2- is  0
      characters:
 [ 1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]
      multi for  GM3+ is  0
      characters:
 [ 1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1.  1. -1.]
      multi for  GM3- is  0
      characters:
 [ 1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.]
      multi for  GM4+ is  0
      characters:
 [ 1. -1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1.]
      multi for  GM4- is  0
      characters:
 [ 2.  0.  0.  0.  2.  0.  0.  0. -2.  0.  0.  0. -2.  0.  0.  0.]
      multi for  GM5d is  5
      characters:
 [ 2.  0.  0.  0. -2.  0.  0.  0. -2.  0.  0.  0.  2.  0.  0.  0.]
      multi for  GM6d is  0
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
