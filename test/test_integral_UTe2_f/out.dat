 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
omit a blank line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
<cfd> will be read from atom2020.cemat.in
Are you sure the basis need not to transform to natural basis from atomic basis!
self.norb:
 14
self.nmin:
 1
self.nmax:
 1
self.ncfgs:
 14
self.int_type:
 kanamori
self.int_val:
 {'U': 5.0, 'Up': 3.2, 'Jz': 0.9, 'Js': 0.9, 'Jp': 0.9}
self.soc_type:
 f
self.soc_val:
 0.2410105
self.soc_mat:
 [[ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j         -2.95176374e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.29517637j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   2.95176374e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.29517637j  0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          2.95176374e-01+0.j
   3.18751940e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.12050525j  0.00000000e+00+0.j
   0.00000000e+00+0.j         -1.90535530e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.19053553j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [-2.95176374e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j         -3.18751940e-18+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.12050525j
   1.90535530e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.19053553j  0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00-0.29517637j
   0.00000000e+00+0.12050525j  0.00000000e+00+0.j
   3.18751940e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.19053553j
   0.00000000e+00+0.j         -1.90535530e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00-0.29517637j  0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.12050525j
   0.00000000e+00+0.j         -3.18751940e-18+0.j
   0.00000000e+00-0.19053553j  0.00000000e+00+0.j
   1.90535530e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          1.90535530e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.19053553j
   6.37503880e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.2410105j   0.00000000e+00+0.j
   0.00000000e+00+0.j         -1.47588187e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.14758819j]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
  -1.90535530e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.19053553j  0.00000000e+00+0.j
   0.00000000e+00+0.j         -6.37503880e-18+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.2410105j
   1.47588187e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.14758819j  0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.19053553j
   0.00000000e+00+0.j          1.90535530e-01+0.j
   0.00000000e+00+0.2410105j   0.00000000e+00+0.j
   6.37503880e-18+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.14758819j
   0.00000000e+00+0.j         -1.47588187e-01+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.19053553j  0.00000000e+00+0.j
  -1.90535530e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.2410105j
   0.00000000e+00+0.j         -6.37503880e-18+0.j
   0.00000000e+00-0.14758819j  0.00000000e+00+0.j
   1.47588187e-01+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          1.47588187e-01+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.14758819j
   1.07530842e-17+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.36151575j  0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
  -1.47588187e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.14758819j  0.00000000e+00+0.j
   0.00000000e+00+0.j         -1.07530842e-17+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.36151575j]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.14758819j
   0.00000000e+00+0.j          1.47588187e-01+0.j
   0.00000000e+00+0.36151575j  0.00000000e+00+0.j
   1.07530842e-17+0.j          0.00000000e+00+0.j        ]
 [ 0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00+0.j
   0.00000000e+00-0.14758819j  0.00000000e+00+0.j
  -1.47588187e-01+0.j          0.00000000e+00+0.j
   0.00000000e+00+0.j          0.00000000e+00-0.36151575j
   0.00000000e+00+0.j         -1.07530842e-17+0.j        ]]
self.cfd_mat:
 [[13.1262055+0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j 13.1262055+0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j 13.06893  +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j 13.06893  +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
  13.1197795+0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j 13.1197795+0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j 13.0869435+0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j 13.0869435+0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
  13.0770505+0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j 13.0770505+0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j 13.0762855+0.j  0.       +0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j 13.0762855+0.j
   0.       +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
  13.090328 +0.j  0.       +0.j]
 [ 0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j  0.       +0.j  0.       +0.j  0.       +0.j
   0.       +0.j 13.090328 +0.j]]
self.onsite:
 [[13.1262055 +0.j          0.        +0.j          0.        +0.j
  -0.29517637+0.j          0.        +0.j          0.        +0.29517637j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [ 0.        +0.j         13.1262055 +0.j          0.29517637+0.j
   0.        +0.j          0.        +0.29517637j  0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [ 0.        +0.j          0.29517637+0.j         13.06893   +0.j
   0.        +0.j          0.        -0.12050525j  0.        +0.j
   0.        +0.j         -0.19053553+0.j          0.        +0.j
   0.        +0.19053553j  0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [-0.29517637+0.j          0.        +0.j          0.        +0.j
  13.06893   +0.j          0.        +0.j          0.        +0.12050525j
   0.19053553+0.j          0.        +0.j          0.        +0.19053553j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [ 0.        +0.j          0.        -0.29517637j  0.        +0.12050525j
   0.        +0.j         13.1197795 +0.j          0.        +0.j
   0.        +0.j          0.        -0.19053553j  0.        +0.j
  -0.19053553+0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [ 0.        -0.29517637j  0.        +0.j          0.        +0.j
   0.        -0.12050525j  0.        +0.j         13.1197795 +0.j
   0.        -0.19053553j  0.        +0.j          0.19053553+0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.19053553+0.j          0.        +0.j          0.        +0.19053553j
  13.0869435 +0.j          0.        +0.j          0.        -0.2410105j
   0.        +0.j          0.        +0.j         -0.14758819+0.j
   0.        +0.j          0.        +0.14758819j]
 [ 0.        +0.j          0.        +0.j         -0.19053553+0.j
   0.        +0.j          0.        +0.19053553j  0.        +0.j
   0.        +0.j         13.0869435 +0.j          0.        +0.j
   0.        +0.2410105j   0.14758819+0.j          0.        +0.j
   0.        +0.14758819j  0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        -0.19053553j  0.        +0.j          0.19053553+0.j
   0.        +0.2410105j   0.        +0.j         13.0770505 +0.j
   0.        +0.j          0.        +0.j          0.        -0.14758819j
   0.        +0.j         -0.14758819+0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        -0.19053553j
   0.        +0.j         -0.19053553+0.j          0.        +0.j
   0.        +0.j          0.        -0.2410105j   0.        +0.j
  13.0770505 +0.j          0.        -0.14758819j  0.        +0.j
   0.14758819+0.j          0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.14758819+0.j          0.        +0.j
   0.        +0.14758819j 13.0762855 +0.j          0.        +0.j
   0.        -0.36151575j  0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
  -0.14758819+0.j          0.        +0.j          0.        +0.14758819j
   0.        +0.j          0.        +0.j         13.0762855 +0.j
   0.        +0.j          0.        +0.36151575j]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        -0.14758819j  0.        +0.j
   0.14758819+0.j          0.        +0.36151575j  0.        +0.j
  13.090328  +0.j          0.        +0.j        ]
 [ 0.        +0.j          0.        +0.j          0.        +0.j
   0.        +0.j          0.        +0.j          0.        +0.j
   0.        -0.14758819j  0.        +0.j         -0.14758819+0.j
   0.        +0.j          0.        +0.j          0.        -0.36151575j
   0.        +0.j         13.090328  +0.j        ]]
self.point_group:
 D2h
self.vpm_type:
 1
nstat=
 [   1   14   91  364 1001 2002 3003 3432 3003 2002 1001  364   91   14
    1]
dim= 3
npower= 3
npoly= [3 3 3 2 1 2 2]
nfunc= 7
umat= [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0., -1.]]), array([[ 1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[-1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])]
nop= 16
shell= f
func_o= {}
mapbasis= {}
vec_oldbasis= None
umat_new= []
su2= [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[ 0.+0.j, -1.+0.j],
       [ 1.+0.j,  0.+0.j]]), array([[ 0.+0.j, -0.-1.j],
       [-0.-1.j,  0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[ 0.+0.j,  1.+0.j],
       [-1.+0.j,  0.+0.j]]), array([[0.+0.j, 0.+1.j],
       [0.+1.j, 0.+0.j]])]
umat_so= []
mapbasis= {'300': 0, '210': 1, '120': 2, '030': 3, '201': 4, '111': 5, '021': 6, '102': 7, '012': 8, '003': 9}
vec_oldbasis= [[ 0.         -1.22474487  0.          0.          0.          1.58113883
   0.        ]
 [ 0.          0.         -1.22474487  0.          0.          0.
   4.74341649]
 [ 0.         -1.22474487  0.          0.          0.         -4.74341649
   0.        ]
 [ 0.          0.         -1.22474487  0.          0.          0.
  -1.58113883]
 [-3.          0.          0.          3.87298335  0.          0.
   0.        ]
 [ 0.          0.          0.          0.          7.74596669  0.
   0.        ]
 [-3.          0.          0.         -3.87298335  0.          0.
   0.        ]
 [ 0.          4.89897949  0.          0.          0.          0.
   0.        ]
 [ 0.          0.          4.89897949  0.          0.          0.
   0.        ]
 [ 2.          0.          0.          0.          0.          0.
   0.        ]]
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
****************************************
* nocc =  1
      ******************************
     * nop =  0
      ******************************
     * nop =  1
      ******************************
     * nop =  2
      ******************************
     * nop =  3
      ******************************
     * nop =  4
      ******************************
     * nop =  5
      ******************************
     * nop =  6
      ******************************
     * nop =  7
      ******************************
     * nop =  8
      ******************************
     * nop =  9
      ******************************
     * nop =  10
      ******************************
     * nop =  11
      ******************************
     * nop =  12
      ******************************
     * nop =  13
      ******************************
     * nop =  14
      ******************************
     * nop =  15
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
     * I start to check the unitarity of operatros *
           - - - - - 
           diagonal elements for iop = 0
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 1
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 2
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 3
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 4
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 5
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 6
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 7
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 8
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 9
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 10
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 11
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 12
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 13
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 14
              it is a identity matrix : Pass

           - - - - - 
           diagonal elements for iop = 15
              it is a identity matrix : Pass

       * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * *  * * 
>>>>> irrep : GM1+
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM1-
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM2+
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM2-
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM3+
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM3-
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM4+
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM4-
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM5d
multi success!
>>>>> multi : 0
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00', 'P01', 'P11', 'P10'])
>>>>> irrep : GM6d
multi success!
>>>>> multi : 7
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00', 'P01', 'P11', 'P10'])


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM6d is 3
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM6d > is : 1.0
* WAVE(phi2) Done :  of multi< 0 > of < GM6d > is : 0.9999999999999999
* basis set for multi 0 of  GM6d is
 [array([0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.-0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 2

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 1 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 1
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM6d is 5
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM6d > is : 1.0
* WAVE(phi2) Done :  of multi< 1 > of < GM6d > is : 0.9999999999999999
* basis set for multi 1 of  GM6d is
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 3

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (1+0j)
       i= 3 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (-1+0j)
       i= 3 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.4142135623730951


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 2 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 2
   independent:  multi(from 0)= 1 multi(now)= 2
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 2 of irreps  GM6d is 7
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 2 > of < GM6d > is : 1.0
* WAVE(phi2) Done :  of multi< 2 > of < GM6d > is : 0.9999999999999999
* basis set for multi 2 of  GM6d is
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.70710678+0.j, -0.70710678+0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.-0.70710678j, 0.-0.70710678j,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 4

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (-1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (1+0j)
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (-1+0j)
       i= 5 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 3 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 3
   independent:  multi(from 0)= 1 multi(now)= 3
   independent:  multi(from 0)= 2 multi(now)= 3
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 3 of irreps  GM6d is 1
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 3 > of < GM6d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 3 > of < GM6d > is : 0.9999999999999999
* basis set for multi 3 of  GM6d is
 [array([ 0.70710678+0.j, -0.70710678+0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j]), array([0.-0.70710678j, 0.-0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 5

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (1+0j)
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (-1+0j)
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (-1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (-1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 4 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 4
   independent:  multi(from 0)= 1 multi(now)= 4
   independent:  multi(from 0)= 2 multi(now)= 4
   independent:  multi(from 0)= 3 multi(now)= 4
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 4 of irreps  GM6d is 9
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 4 > of < GM6d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 4 > of < GM6d > is : 0.9999999999999998
* basis set for multi 4 of  GM6d is
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.70710678+0.j, 0.70710678+0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.-0.70710678j, 0.+0.70710678j, 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865474
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865474 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865474 0.7071067811865474
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 6

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (1+0j)
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (-1+0j)
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (-1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (-1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  (1+0j)
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  (1+0j)
       i= 9 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 5 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 5
   independent:  multi(from 0)= 1 multi(now)= 5
   independent:  multi(from 0)= 2 multi(now)= 5
   independent:  multi(from 0)= 3 multi(now)= 5
   independent:  multi(from 0)= 4 multi(now)= 5
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 5 of irreps  GM6d is 11
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 5 > of < GM6d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 5 > of < GM6d > is : 0.9999999999999999
* basis set for multi 5 of  GM6d is
 [array([0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.        +0.j, 0.        +0.j,
       0.        +0.j, 0.        +0.j, 0.70710678+0.j, 0.70710678+0.j,
       0.        +0.j, 0.        +0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.70710678j, 0.-0.70710678j,
       0.+0.j        , 0.+0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 7

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (1+0j)
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  (-1+0j)
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  (1+0j)
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  (-1+0j)
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  (-1+0j)
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  (1+0j)
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  (1+0j)
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 10

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  (1+0j)
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 11

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  (1+0j)
       i= 11 components =  0j
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 12

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 13

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
multi_now(from 0) = 6 / 7    num of irrep_prev : 0
- - - - - 

   independent:  multi(from 0)= 0 multi(now)= 6
   independent:  multi(from 0)= 1 multi(now)= 6
   independent:  multi(from 0)= 2 multi(now)= 6
   independent:  multi(from 0)= 3 multi(now)= 6
   independent:  multi(from 0)= 4 multi(now)= 6
   independent:  multi(from 0)= 5 multi(now)= 6
  
   entering isindependent ....
      I will should the components ...
       i= 0 components =  0j
       i= 1 components =  0j
       i= 2 components =  0j
       i= 3 components =  0j
       i= 4 components =  0j
       i= 5 components =  0j
       i= 6 components =  0j
       i= 7 components =  0j
       i= 8 components =  0j
       i= 9 components =  0j
       i= 10 components =  0j
       i= 11 components =  0j
     Not Sad (isindependent value) :  1.414213562373095

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 6 of irreps  GM6d is 13
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 6 > of < GM6d > is : 0.9999999999999999
* WAVE(phi2) Done :  of multi< 6 > of < GM6d > is : 0.9999999999999999
* basis set for multi 6 of  GM6d is
 [array([ 0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.        +0.j,  0.        +0.j,  0.        +0.j,  0.        +0.j,
        0.70710678+0.j, -0.70710678+0.j]), array([0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.j        , 0.+0.j        , 0.+0.j        , 0.+0.j        ,
       0.+0.70710678j, 0.+0.70710678j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 2  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 3  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 4  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 4  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 5  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 5  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 6  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 6  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 7  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 7  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 8  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 8  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 9  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 9  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 10  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 10  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 11  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 11  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 3
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 4
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 5
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 6
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 7
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 8
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 9
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 10
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 11
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 12
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
-----
ir1= 12  ir2= 13
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 12  ir2= 14
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 13  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 13  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 3
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 4
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 5
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 6
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 7
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 8
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 9
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 10
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 11
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 12
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 13
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 14  ir2= 14
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  2  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  3  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  3  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865475
-----> equal
Ortho: multi1 =  4  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865475 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  4  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  5  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  5  multi2 =  6   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  0   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  1   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  2   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  3   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865475
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  4   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  6  multi2 =  5   ->  True

----------
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 0.7071067811865476 0.7071067811865476
-----> equal
Ortho: multi1 =  6  multi2 =  6   ->  True

* * * * *   orthogonality[irreps] between different irreps

* ** ** ** ** ** ** ** ** ** *
 * I am checking the properties of projectors : W^i_{np}W^j_{qr} = W^i_{nr}\delta_{ij}\delta_{pq}
* ** ** ** ** ** ** ** ** ** *

i =  GM1+ j =  GM1+
     : beautiful~~~ [True]
i =  GM1+ j =  GM1-
     : beautiful~~~ [True]
i =  GM1+ j =  GM2+
     : beautiful~~~ [True]
i =  GM1+ j =  GM2-
     : beautiful~~~ [True]
i =  GM1+ j =  GM3+
     : beautiful~~~ [True]
i =  GM1+ j =  GM3-
     : beautiful~~~ [True]
i =  GM1+ j =  GM4+
     : beautiful~~~ [True]
i =  GM1+ j =  GM4-
     : beautiful~~~ [True]
i =  GM1+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM1+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM1- j =  GM1+
     : beautiful~~~ [True]
i =  GM1- j =  GM1-
     : beautiful~~~ [True]
i =  GM1- j =  GM2+
     : beautiful~~~ [True]
i =  GM1- j =  GM2-
     : beautiful~~~ [True]
i =  GM1- j =  GM3+
     : beautiful~~~ [True]
i =  GM1- j =  GM3-
     : beautiful~~~ [True]
i =  GM1- j =  GM4+
     : beautiful~~~ [True]
i =  GM1- j =  GM4-
     : beautiful~~~ [True]
i =  GM1- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM1- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM2+ j =  GM1+
     : beautiful~~~ [True]
i =  GM2+ j =  GM1-
     : beautiful~~~ [True]
i =  GM2+ j =  GM2+
     : beautiful~~~ [True]
i =  GM2+ j =  GM2-
     : beautiful~~~ [True]
i =  GM2+ j =  GM3+
     : beautiful~~~ [True]
i =  GM2+ j =  GM3-
     : beautiful~~~ [True]
i =  GM2+ j =  GM4+
     : beautiful~~~ [True]
i =  GM2+ j =  GM4-
     : beautiful~~~ [True]
i =  GM2+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM2+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM2- j =  GM1+
     : beautiful~~~ [True]
i =  GM2- j =  GM1-
     : beautiful~~~ [True]
i =  GM2- j =  GM2+
     : beautiful~~~ [True]
i =  GM2- j =  GM2-
     : beautiful~~~ [True]
i =  GM2- j =  GM3+
     : beautiful~~~ [True]
i =  GM2- j =  GM3-
     : beautiful~~~ [True]
i =  GM2- j =  GM4+
     : beautiful~~~ [True]
i =  GM2- j =  GM4-
     : beautiful~~~ [True]
i =  GM2- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM2- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM3+ j =  GM1+
     : beautiful~~~ [True]
i =  GM3+ j =  GM1-
     : beautiful~~~ [True]
i =  GM3+ j =  GM2+
     : beautiful~~~ [True]
i =  GM3+ j =  GM2-
     : beautiful~~~ [True]
i =  GM3+ j =  GM3+
     : beautiful~~~ [True]
i =  GM3+ j =  GM3-
     : beautiful~~~ [True]
i =  GM3+ j =  GM4+
     : beautiful~~~ [True]
i =  GM3+ j =  GM4-
     : beautiful~~~ [True]
i =  GM3+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM3+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM3- j =  GM1+
     : beautiful~~~ [True]
i =  GM3- j =  GM1-
     : beautiful~~~ [True]
i =  GM3- j =  GM2+
     : beautiful~~~ [True]
i =  GM3- j =  GM2-
     : beautiful~~~ [True]
i =  GM3- j =  GM3+
     : beautiful~~~ [True]
i =  GM3- j =  GM3-
     : beautiful~~~ [True]
i =  GM3- j =  GM4+
     : beautiful~~~ [True]
i =  GM3- j =  GM4-
     : beautiful~~~ [True]
i =  GM3- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM3- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM4+ j =  GM1+
     : beautiful~~~ [True]
i =  GM4+ j =  GM1-
     : beautiful~~~ [True]
i =  GM4+ j =  GM2+
     : beautiful~~~ [True]
i =  GM4+ j =  GM2-
     : beautiful~~~ [True]
i =  GM4+ j =  GM3+
     : beautiful~~~ [True]
i =  GM4+ j =  GM3-
     : beautiful~~~ [True]
i =  GM4+ j =  GM4+
     : beautiful~~~ [True]
i =  GM4+ j =  GM4-
     : beautiful~~~ [True]
i =  GM4+ j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM4+ j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM4- j =  GM1+
     : beautiful~~~ [True]
i =  GM4- j =  GM1-
     : beautiful~~~ [True]
i =  GM4- j =  GM2+
     : beautiful~~~ [True]
i =  GM4- j =  GM2-
     : beautiful~~~ [True]
i =  GM4- j =  GM3+
     : beautiful~~~ [True]
i =  GM4- j =  GM3-
     : beautiful~~~ [True]
i =  GM4- j =  GM4+
     : beautiful~~~ [True]
i =  GM4- j =  GM4-
     : beautiful~~~ [True]
i =  GM4- j =  GM5d
     : beautiful~~~ [True, True, True]
i =  GM4- j =  GM6d
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM1+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM1-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM2+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM2-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM3+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM3-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM4+
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM4-
     : beautiful~~~ [True, True, True]
i =  GM5d j =  GM5d
     : beautiful~~~ [True, True]
i =  GM5d j =  GM6d
     : beautiful~~~ [True, True, True, True, True, True, True, True, True]
i =  GM6d j =  GM1+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM1-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM2+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM2-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM3+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM3-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM4+
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM4-
     : beautiful~~~ [True, True, True]
i =  GM6d j =  GM5d
     : beautiful~~~ [True, True, True, True, True, True, True, True, True]
i =  GM6d j =  GM6d
     : beautiful~~~ [True, True]
* * * * * * * * * * * * * * * * * * * * 
|*| the label of final basis of irreps :
 [['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1], ['GM6d', 2, 0], ['GM6d', 2, 1]]
* * * * * * * * * * * * * * * * * * * * 
CHECK: the degeneracy of irreps :
      j = 0 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 1 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 2 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 3 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 4 deg= 7 logic: True label =  ['GM6d', 2, 1]
      j = 5 deg= 7 logic: True label =  ['GM6d', 2, 0]
      j = 6 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 7 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 8 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 9 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 10 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 11 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 12 deg= 14 logic: False label =  ['GM6d', 2, 0]
      j = 13 deg= 14 logic: False label =  ['GM6d', 2, 0]
      characters:
 [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
      multi for  GM1+ is  0
      characters:
 [ 1.  1.  1.  1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1.]
      multi for  GM1- is  0
      characters:
 [ 1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.]
      multi for  GM2+ is  0
      characters:
 [ 1.  1. -1. -1. -1. -1.  1.  1.  1.  1. -1. -1. -1. -1.  1.  1.]
      multi for  GM2- is  0
      characters:
 [ 1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.  1. -1. -1.  1.]
      multi for  GM3+ is  0
      characters:
 [ 1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1.  1. -1.]
      multi for  GM3- is  0
      characters:
 [ 1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.  1. -1.]
      multi for  GM4+ is  0
      characters:
 [ 1. -1.  1. -1. -1.  1. -1.  1.  1. -1.  1. -1. -1.  1. -1.  1.]
      multi for  GM4- is  0
      characters:
 [ 2.  0.  0.  0.  2.  0.  0.  0. -2.  0.  0.  0. -2.  0.  0.  0.]
      multi for  GM5d is  0
      characters:
 [ 2.  0.  0.  0. -2.  0.  0.  0. -2.  0.  0.  0.  2.  0.  0.  0.]
      multi for  GM6d is  7
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          11
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          12
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          13
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          14
 ORBth =            1 cnt_flag=           1
 
 
