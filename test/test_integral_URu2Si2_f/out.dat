 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           1
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           2
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           3
 ORBth =            1 cnt_flag=           1
 
 
omit a blank line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
omit a comment line
<cfd> will be read from atom2020.cemat.in
Are you sure the basis need not to transform to natural basis from atomic basis!
self.norb:
 10
self.nmin:
 1
self.nmax:
 1
self.ncfgs:
 10
self.int_type:
 kanamori
self.int_val:
 {'U': 5.0, 'Up': 3.2, 'Jz': 0.9, 'Js': 0.9, 'Jp': 0.9}
self.soc_type:
 d
self.soc_val:
 0.248265
self.soc_mat:
 [[ 0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j        -2.15003797e-01+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.2150038j
   0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         0.00000000e+00+0.j
   2.15003797e-01+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.2150038j  0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         2.15003797e-01+0.j
  -1.88505478e-18+0.j         0.00000000e+00+0.j
   0.00000000e+00-0.1241325j  0.00000000e+00+0.j
   0.00000000e+00+0.j        -1.24132500e-01+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.1241325j]
 [-2.15003797e-01+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         1.88505478e-18+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.1241325j
   1.24132500e-01+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.1241325j  0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         0.00000000e+00-0.2150038j
   0.00000000e+00+0.1241325j  0.00000000e+00+0.j
  -1.88505478e-18+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00-0.1241325j
   0.00000000e+00+0.j        -1.24132500e-01+0.j       ]
 [ 0.00000000e+00-0.2150038j  0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00-0.1241325j
   0.00000000e+00+0.j         1.88505478e-18+0.j
   0.00000000e+00-0.1241325j  0.00000000e+00+0.j
   1.24132500e-01+0.j         0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         1.24132500e-01+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.1241325j
  -3.77010957e-18+0.j         0.00000000e+00+0.j
   0.00000000e+00-0.248265j   0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         0.00000000e+00+0.j
  -1.24132500e-01+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.1241325j  0.00000000e+00+0.j
   0.00000000e+00+0.j         3.77010957e-18+0.j
   0.00000000e+00+0.j         0.00000000e+00+0.248265j ]
 [ 0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00-0.1241325j
   0.00000000e+00+0.j         1.24132500e-01+0.j
   0.00000000e+00+0.248265j   0.00000000e+00+0.j
  -3.77010957e-18+0.j         0.00000000e+00+0.j       ]
 [ 0.00000000e+00+0.j         0.00000000e+00+0.j
   0.00000000e+00-0.1241325j  0.00000000e+00+0.j
  -1.24132500e-01+0.j         0.00000000e+00+0.j
   0.00000000e+00+0.j         0.00000000e+00-0.248265j
   0.00000000e+00+0.j         3.77010957e-18+0.j       ]]
self.cfd_mat:
 [[17.929108+0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j        17.929108+0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j        17.841019+0.j
   0.      +0.j         0.      +0.0022735j  0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
  17.841019+0.j         0.      +0.j         0.      +0.0022735j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      -0.0022735j
   0.      +0.j        17.841019+0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
   0.      -0.0022735j  0.      +0.j        17.841019+0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
  17.865477+0.j         0.      +0.j         1.      +0.2032735j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j        17.865477+0.j         0.      +0.j
   1.      +0.2032735j]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   1.      -0.2032735j  0.      +0.j        18.009242+0.j
   0.      +0.j       ]
 [ 0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         0.      +0.j         0.      +0.j
   0.      +0.j         1.      -0.2032735j  0.      +0.j
  18.009242+0.j       ]]
self.onsite:
 [[17.929108 +0.j         0.       +0.j         0.       +0.j
  -0.2150038+0.j         0.       +0.j         0.       +0.2150038j
   0.       +0.j         0.       +0.j         0.       +0.j
   0.       +0.j       ]
 [ 0.       +0.j        17.929108 +0.j         0.2150038+0.j
   0.       +0.j         0.       +0.2150038j  0.       +0.j
   0.       +0.j         0.       +0.j         0.       +0.j
   0.       +0.j       ]
 [ 0.       +0.j         0.2150038+0.j        17.841019 +0.j
   0.       +0.j         0.       -0.121859j   0.       +0.j
   0.       +0.j        -0.1241325+0.j         0.       +0.j
   0.       +0.1241325j]
 [-0.2150038+0.j         0.       +0.j         0.       +0.j
  17.841019 +0.j         0.       +0.j         0.       +0.126406j
   0.1241325+0.j         0.       +0.j         0.       +0.1241325j
   0.       +0.j       ]
 [ 0.       +0.j         0.       -0.2150038j  0.       +0.121859j
   0.       +0.j        17.841019 +0.j         0.       +0.j
   0.       +0.j         0.       -0.1241325j  0.       +0.j
  -0.1241325+0.j       ]
 [ 0.       -0.2150038j  0.       +0.j         0.       +0.j
   0.       -0.126406j   0.       +0.j        17.841019 +0.j
   0.       -0.1241325j  0.       +0.j         0.1241325+0.j
   0.       +0.j       ]
 [ 0.       +0.j         0.       +0.j         0.       +0.j
   0.1241325+0.j         0.       +0.j         0.       +0.1241325j
  17.865477 +0.j         0.       +0.j         1.       -0.0449915j
   0.       +0.j       ]
 [ 0.       +0.j         0.       +0.j        -0.1241325+0.j
   0.       +0.j         0.       +0.1241325j  0.       +0.j
   0.       +0.j        17.865477 +0.j         0.       +0.j
   1.       +0.4515385j]
 [ 0.       +0.j         0.       +0.j         0.       +0.j
   0.       -0.1241325j  0.       +0.j         0.1241325+0.j
   1.       +0.0449915j  0.       +0.j        18.009242 +0.j
   0.       +0.j       ]
 [ 0.       +0.j         0.       +0.j         0.       -0.1241325j
   0.       +0.j        -0.1241325+0.j         0.       +0.j
   0.       +0.j         1.       -0.4515385j  0.       +0.j
  18.009242 +0.j       ]]
self.point_group:
 C4
self.vpm_type:
 1
nstat=
 [  1  10  45 120 210 252 210 120  45  10   1]
basis:
 [  1   2   4   8  16  32  64 128 256 512]
----------
name_sc: C4
pgid: 1
nrank: 8
nclass: None
mb_norb: None
rep_vec:
 [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]])]
rep_spin:
 [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[0.70710678-0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678+0.70710678j]]), array([[0.70710678+0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678-0.70710678j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[-0.70710678+0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678-0.70710678j]]), array([[-0.70710678-0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678+0.70710678j]])]
mb_shell:
 None
irreps:
 [<pg.read_IR_DSG.Irrep object at 0x2ba202afda58>, <pg.read_IR_DSG.Irrep object at 0x2ba202afd9e8>, <pg.read_IR_DSG.Irrep object at 0x2ba202afdcc0>, <pg.read_IR_DSG.Irrep object at 0x2ba202afddd8>, <pg.read_IR_DSG.Irrep object at 0x2ba202afdef0>, <pg.read_IR_DSG.Irrep object at 0x2ba202afd518>, <pg.read_IR_DSG.Irrep object at 0x2ba202afda20>, <pg.read_IR_DSG.Irrep object at 0x2ba202afd908>]
gen_pos:
 None
gen_mul:
 None
irreps_class:
 []
dim= 3
npower= 2
npoly= [3 1 1 2 1]
nfunc= 5
umat= [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]])]
nop= 8
shell= d
func_o= {}
mapbasis= {}
vec_oldbasis= None
umat_new= []
su2= [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[0.70710678-0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678+0.70710678j]]), array([[0.70710678+0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678-0.70710678j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[-0.70710678+0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678-0.70710678j]]), array([[-0.70710678-0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678+0.70710678j]])]
umat_so= []
mapbasis= {'200': 0, '110': 1, '020': 2, '101': 3, '011': 4, '002': 5}
vec_oldbasis= [[-1.          0.          0.          1.73205081  0.        ]
 [ 0.          0.          0.          0.          3.46410162]
 [-1.          0.          0.         -1.73205081  0.        ]
 [ 0.          3.46410162  0.          0.          0.        ]
 [ 0.          0.          3.46410162  0.          0.        ]
 [ 2.          0.          0.          0.          0.        ]]
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
>>> decomposition succeed ...
nop:
 5
self.umat_new:
 (5, 5)
crystal_matrix:
 (10, 10)
Check for the symmetry of crystal : 7.105427357601002e-15
dim= 3
npower= 2
npoly= [3 1 1 2 1]
nfunc= 5
umat= [array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]]), array([[-1.,  0.,  0.],
       [ 0., -1.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0.,  1.,  0.],
       [-1.,  0.,  0.],
       [ 0.,  0.,  1.]]), array([[ 0., -1.,  0.],
       [ 1.,  0.,  0.],
       [ 0.,  0.,  1.]])]
nop= 8
shell= d
func_o= {'struct': array([[[2, 0, 0],
        [0, 2, 0],
        [0, 0, 2]],

       [[1, 0, 1],
        [0, 0, 0],
        [0, 0, 0]],

       [[0, 1, 1],
        [0, 0, 0],
        [0, 0, 0]],

       [[2, 0, 0],
        [0, 2, 0],
        [0, 0, 0]],

       [[1, 1, 0],
        [0, 0, 0],
        [0, 0, 0]]], dtype=int32), 'coeff': array([[-1.        , -1.        ,  2.        ],
       [ 3.46410162,  0.        ,  0.        ],
       [ 3.46410162,  0.        ,  0.        ],
       [ 1.73205081, -1.73205081,  0.        ],
       [ 3.46410162,  0.        ,  0.        ]])}
mapbasis= {'200': 0, '110': 1, '020': 2, '101': 3, '011': 4, '002': 5}
vec_oldbasis= [[-1.          0.          0.          1.73205081  0.        ]
 [ 0.          0.          0.          0.          3.46410162]
 [-1.          0.          0.         -1.73205081  0.        ]
 [ 0.          3.46410162  0.          0.          0.        ]
 [ 0.          0.          3.46410162  0.          0.        ]
 [ 2.          0.          0.          0.          0.        ]]
umat_new= [array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  0., -1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0.,  0., -1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  0.,  0.,  1.,  0.],
       [ 0.,  0.,  0.,  0.,  1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  1.,  0.,  0.],
       [ 0., -1.,  0.,  0.,  0.],
       [ 0.,  0.,  0., -1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]]), array([[ 1.,  0.,  0.,  0.,  0.],
       [ 0.,  0., -1.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0.,  0., -1.,  0.],
       [ 0.,  0.,  0.,  0., -1.]])]
su2= [array([[1.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j]]), array([[-0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j]]), array([[0.70710678-0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678+0.70710678j]]), array([[0.70710678+0.70710678j, 0.        +0.j        ],
       [0.        +0.j        , 0.70710678-0.70710678j]]), array([[-1.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j],
       [ 0.+0.j, -0.-1.j]]), array([[-0.70710678+0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678-0.70710678j]]), array([[-0.70710678-0.70710678j,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678+0.70710678j]])]
umat_so= [array([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
        0.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        1.+0.j, 0.+0.j],
       [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
        0.+0.j, 1.+0.j]]), array([[ 0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.+1.j, -0.+0.j,  0.-0.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.+0.j, -0.-1.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-1.j,
         0.+0.j,  0.-0.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+1.j,  0.+0.j,  0.+0.j],
       [ 0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,
         0.+0.j,  0.-1.j,  0.+0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+1.j]]), array([[ 0.70710678-0.70710678j,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.70710678+0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.70710678-0.70710678j,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.70710678+0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
        -0.70710678+0.70710678j, -0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678-0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.70710678+0.70710678j, -0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678-0.70710678j,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.70710678+0.70710678j, -0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678-0.70710678j]]), array([[ 0.70710678+0.70710678j,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.70710678-0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.70710678-0.70710678j, -0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678+0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.70710678+0.70710678j,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.70710678-0.70710678j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.70710678-0.70710678j, -0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678+0.70710678j,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.70710678-0.70710678j, -0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        , -0.70710678+0.70710678j]]), array([[-1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -1.+0.j,
         0.+0.j, -0.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -1.+0.j,  0.+0.j, -0.+0.j],
       [-0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,
         0.+0.j, -1.+0.j,  0.+0.j],
       [ 0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j, -0.+0.j,  0.+0.j,
        -0.+0.j,  0.+0.j, -1.+0.j]]), array([[ 0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-1.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j, -0.-1.j, -0.+0.j,  0.+0.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j, -0.+0.j,  0.+1.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+1.j,
         0.+0.j,  0.+0.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-1.j,  0.+0.j,  0.-0.j],
       [ 0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,
         0.+0.j,  0.+1.j,  0.+0.j],
       [ 0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,  0.-0.j,  0.+0.j,
         0.-0.j,  0.+0.j,  0.-1.j]]), array([[-0.70710678+0.70710678j,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678-0.70710678j,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ],
       [-0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.70710678+0.70710678j,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        , -0.70710678-0.70710678j,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ],
       [-0.        +0.j        ,  0.        +0.j        ,
         0.70710678-0.70710678j, -0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        -0.j        ,
        -0.        +0.j        ,  0.70710678+0.70710678j,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ],
       [-0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
         0.70710678-0.70710678j, -0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
        -0.        +0.j        ,  0.70710678+0.70710678j,
         0.        +0.j        ,  0.        -0.j        ],
       [-0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
        -0.        +0.j        ,  0.        +0.j        ,
         0.70710678-0.70710678j, -0.        +0.j        ],
       [ 0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
         0.        +0.j        ,  0.        -0.j        ,
        -0.        +0.j        ,  0.70710678+0.70710678j]]), array([[-0.70710678-0.70710678j,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        , -0.70710678+0.70710678j,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ],
       [ 0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.70710678+0.70710678j, -0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
        -0.        +0.j        ,  0.70710678-0.70710678j,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ],
       [ 0.        -0.j        ,  0.        +0.j        ,
        -0.70710678-0.70710678j,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.70710678+0.70710678j,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ],
       [ 0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.70710678+0.70710678j, -0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
        -0.        +0.j        ,  0.70710678-0.70710678j,
         0.        +0.j        , -0.        +0.j        ],
       [ 0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.        -0.j        ,  0.        +0.j        ,
         0.70710678+0.70710678j, -0.        +0.j        ],
       [ 0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
         0.        +0.j        , -0.        +0.j        ,
        -0.        +0.j        ,  0.70710678-0.70710678j]])]
****************************************
* nocc =  1
basis1:
 [  1   2   4   8  16  32  64 128 256 512]
      ******************************
     * nop =  0
      ******************************
     * nop =  1
      ******************************
     * nop =  2
      ******************************
     * nop =  3
      ******************************
     * nop =  4
      ******************************
     * nop =  5
      ******************************
     * nop =  6
      ******************************
     * nop =  7
Check for the symmetry of hamiltonian : 2.1566082253343666e-14
>>>>> irrep : GM1
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[0.-1.38777878e-17j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+1.38777878e-17j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j]]), 'Pquasi': array([[[0.-1.38777878e-17j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+1.38777878e-17j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j],
        [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
         0.+0.00000000e+00j]]]), 'P00': array([[0.-1.38777878e-17j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+1.38777878e-17j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j],
       [0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j, 0.+0.00000000e+00j, 0.+0.00000000e+00j,
        0.+0.00000000e+00j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM2
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17-1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17-1.38777878e-17j]]), 'Pquasi': array([[[ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17+1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17-1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17+1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17-1.38777878e-17j]]]), 'P00': array([[ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17-1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17-1.38777878e-17j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM3
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00-1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17-1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17-1.38777878e-17j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j]]), 'Pquasi': array([[[ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00-1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17-1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17-1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j]]]), 'P00': array([[ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00-1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17-1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
        -2.77555756e-17-1.38777878e-17j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM4
multi success!
>>>>> multi : 0
>>> Projectors  : {'Pcharacter': array([[ 0.00000000e+00+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17+1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17+1.38777878e-17j]]), 'Pquasi': array([[[ 0.00000000e+00+1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17+1.38777878e-17j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j],
        [ 0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
          0.00000000e+00+0.00000000e+00j,
         -2.77555756e-17+1.38777878e-17j]]]), 'P00': array([[ 0.00000000e+00+1.38777878e-17j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17+1.38777878e-17j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j],
       [ 0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j,  0.00000000e+00+0.00000000e+00j,
         0.00000000e+00+0.00000000e+00j, -2.77555756e-17+1.38777878e-17j]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])
>>>>> irrep : GM5d
multi success!
>>>>> multi : 3
>>> Projectors  : {'Pcharacter': array([[ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         5.00000000e-01+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00-0.5j,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         1.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  1.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]]), 'Pquasi': array([[[ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
          0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          1.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ]]]), 'P00': array([[ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         5.00000000e-01+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00-0.5j,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         1.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  1.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])


====================
* * imul : 0

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
           NO NEED : because imul= 0 len(irrep_prev)= 0

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM5d is 3
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM5d > is : 0.9999999999999999
* basis set for multi 0 of  GM5d is
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
para     :
 [1.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  -1j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        -0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
para     :
 [0.-1.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
para     :
 [0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
para     :
 [0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM5d is 6
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM5d > is : 1.0
* basis set for multi 1 of  GM5d is
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 2

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  -1j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        -0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.-1.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        -0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.-1.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  (1+0j)
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 2 of irreps  GM5d is 8
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 2 > of < GM5d > is : 1.0
* basis set for multi 2 of  GM5d is
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
basis before norm :
 [[0.        +0.j         0.        +0.j         0.        +0.j
  0.70710678+0.j         0.        +0.j         0.        +0.70710678j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]
 [0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  1.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]
 [0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         1.        +0.j
  0.        +0.j        ]]
basis before norm :
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
check before entering isOrthogonal :

                   vectors_new_all : [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
                   vectors_new_all_copy : [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 3
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
-----
ir1= 2  ir2= 3
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 2
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 3
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  2   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  2   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  0   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  1   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
-----> equal
Ortho: multi1 =  2  multi2 =  2   ->  True

>>>>> irrep : GM6d
multi success!
>>>>> multi : 2
>>> Projectors  : {'Pcharacter': array([[ 1.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         5.00000000e-01+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.5j,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]]), 'Pquasi': array([[[ 1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
          0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ]]]), 'P00': array([[ 1.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j , -1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         5.00000000e-01+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.5j,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])


====================
* * imul : 0

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM6d is 3
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM6d > is : 0.9999999999999999
* basis set for multi 0 of  GM6d is
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  1j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.70710678j 0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM6d is 0
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM6d > is : 1.0
* basis set for multi 1 of  GM6d is
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
basis before norm :
 [[0.        +0.j         0.        +0.j         0.        +0.j
  0.70710678+0.j         0.        +0.j         0.        -0.70710678j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]
 [1.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]]
basis before norm :
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
check before entering isOrthogonal :

                   vectors_new_all : [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
                   vectors_new_all_copy : [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 1.0 1.0
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

>>>>> irrep : GM7d
multi success!
>>>>> multi : 3
>>> Projectors  : {'Pcharacter': array([[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00-0.5j,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
         0.00000000e+00+0.j ,  5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         1.00000000e+00+0.j ]]), 'Pquasi': array([[[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00-0.5j,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.5j,  0.00000000e+00+0.j ,
          5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  1.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  1.00000000e+00+0.j ]]]), 'P00': array([[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00-0.5j,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.5j,
         0.00000000e+00+0.j ,  5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         1.00000000e+00+0.j ]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])


====================
* * imul : 0

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
     Not Sad (isindependent value) :  1.0

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM7d is 2
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM7d > is : 0.9999999999999999
* basis set for multi 0 of  GM7d is
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  1j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
     Not Sad (isindependent value) :  1.0

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM7d is 7
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM7d > is : 1.0
* basis set for multi 1 of  GM7d is
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 2

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  1j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  (1+0j)
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
       i= 6 components =  0j
basis    :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
     Not Sad (isindependent value) :  1.0

*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 2 of irreps  GM7d is 9
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 2 > of < GM7d > is : 1.0
* basis set for multi 2 of  GM7d is
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
basis before norm :
 [[0.        +0.j         0.        +0.j         0.70710678+0.j
  0.        +0.j         0.        -0.70710678j 0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]
 [0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         1.        +0.j         0.        +0.j
  0.        +0.j        ]
 [0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  1.        +0.j        ]]
basis before norm :
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
check before entering isOrthogonal :

                   vectors_new_all : [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
                   vectors_new_all_copy : [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 1  ir2= 3
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
-----> equal
-----
ir1= 2  ir2= 3
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 2
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 3  ir2= 3
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  2   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  2   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  0   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  2  multi2 =  1   ->  True

----------
basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
-----> equal
Ortho: multi1 =  2  multi2 =  2   ->  True

>>>>> irrep : GM8d
multi success!
>>>>> multi : 2
>>> Projectors  : {'Pcharacter': array([[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.5j,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
         0.00000000e+00+0.j ,  5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]]), 'Pquasi': array([[[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  1.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.5j,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00-0.5j,  0.00000000e+00+0.j ,
          5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ],
        [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
          0.00000000e+00+0.j ,  0.00000000e+00+0.j ]]]), 'P00': array([[-1.38777878e-17+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  1.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  5.00000000e-01+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.5j,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00-0.5j,
         0.00000000e+00+0.j ,  5.00000000e-01+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ],
       [ 0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ,  0.00000000e+00+0.j ,  0.00000000e+00+0.j ,
         0.00000000e+00+0.j ]])}
>>>>> projectors :
 dict_keys(['Pcharacter', 'Pquasi', 'P00'])


====================
* * imul : 0

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 7 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
       i= 7 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
     Not Sad (isindependent value) :  1.414213562373095


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 0 of irreps  GM8d is 2
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 0 > of < GM8d > is : 0.9999999999999999
* basis set for multi 0 of  GM8d is
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -


====================
* * imul : 1

 ********** 
 * *  i : 0

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 1

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 8 components =  0j
basis    :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
     Not Sad (isindependent value) :  1.0


 ********** 
 * *  i : 2

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  (1+0j)
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 8 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 3

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 4

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
- - - - -  
    check independence ...
  
   entering isindependent ....
      I will show1 the components ...
       i= 0 components =  -1j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 1 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 2 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 3 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 4 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 5 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 6 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 7 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
       i= 8 components =  0j
basis    :
 [0.        +0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.70710678+0.j         0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
para     :
 [0.-1.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
results  :
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
         Sad (isindependent value) :  0.0


 ********** 
 * *  i : 5

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 6

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 7

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 8

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 

 ********** 
 * *  i : 9

 . . . . . . . . .  
 i(P_ii)= 0 | 
 . . . . . . . . . 
*-*-*-*-*-*-*-*-*-*-
* the proper phi for phi1 of mulit= 1 of irreps  GM8d is 1
*-*-*-*-*-*-*-*-*-*-
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
* WAVE(phi1) Done :  of multi< 1 > of < GM8d > is : 1.0
* basis set for multi 1 of  GM8d is
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
* is this set basis orthogonal to each other : True
- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
basis before norm :
 [[0.        +0.j         0.        +0.j         0.70710678+0.j
  0.        +0.j         0.        +0.70710678j 0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]
 [0.        +0.j         1.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j         0.        +0.j         0.        +0.j
  0.        +0.j        ]]
basis before norm :
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[all] of the whole newly produced basis of the irrep ...
check before entering isOrthogonal :

                   vectors_new_all : [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
                   vectors_new_all_copy : [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
-----
ir1= 1  ir2= 2
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

-----
ir1= 2  ir2= 2
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
      All is Orthogonal ?    True
 
* * * * * * * * * * * * * * * * * * * * 
      >>> orthogonality[multi] between different multi ...
----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 0.7071067811865476
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
-----> equal
Ortho: multi1 =  0  multi2 =  0   ->  True

----------
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865476 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  0  multi2 =  1   ->  True

----------
basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865476
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0

Ortho: multi1 =  1  multi2 =  0   ->  True

----------
basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
-----> equal
Ortho: multi1 =  1  multi2 =  1   ->  True

* * * * *   orthogonality[irreps] between different irreps
basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM6d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM6d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM6d <--> multi: 2 of GM5d  :  True

basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM6d <--> multi: 0 of GM5d  :  True

basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM6d <--> multi: 1 of GM5d  :  True

basis:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM6d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM7d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM7d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM7d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM7d <--> multi: 0 of GM6d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM7d <--> multi: 1 of GM6d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM7d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM7d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM7d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM7d <--> multi: 0 of GM6d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM7d <--> multi: 1 of GM6d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 2 of GM7d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 2 of GM7d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 2 of GM7d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 2 of GM7d <--> multi: 0 of GM6d  :  True

basis:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 2 of GM7d <--> multi: 1 of GM6d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 0 of GM6d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 1 of GM6d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 0.7071067811865475
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 0 of GM7d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 1 of GM7d  :  True

basis:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 0.7071067811865475 1.0
ir1=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        +0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0


multi: 0 of GM8d <--> multi: 2 of GM7d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        +0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 0 of GM5d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 1 of GM5d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 2 of GM5d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.        +0.j
 0.70710678+0.j         0.        +0.j         0.        -0.70710678j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 0 of GM6d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 1 of GM6d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ])]
-----
ir1= 1  ir2= 1
max_value: 1.0 0.7071067811865475
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.        +0.j         0.        +0.j         0.70710678+0.j
 0.        +0.j         0.        -0.70710678j 0.        +0.j
 0.        +0.j         0.        +0.j         0.        +0.j
 0.        +0.j        ]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 0 of GM7d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j 0.+0.j 0.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 1 of GM7d  :  True

basis:
 [array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
basis_set:
 [array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j])]
-----
ir1= 1  ir2= 1
max_value: 1.0 1.0
ir1=
 [0.+0.j 1.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j]
ir2=
 [0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 0.+0.j 1.+0.j]
Not sad (isOrtho value) :  0.0


multi: 1 of GM8d <--> multi: 2 of GM7d  :  True

Check Pro(main) :
 [[ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j  -1.38777878e-17+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   5.00000000e-01+0.j   0.00000000e+00+0.j   0.00000000e+00+0.5j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00-0.5j  0.00000000e+00+0.j   5.00000000e-01+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   1.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   1.00000000e+00+0.j
   0.00000000e+00+0.j ]
 [ 0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j   0.00000000e+00+0.j   0.00000000e+00+0.j
   0.00000000e+00+0.j ]]

* ** ** ** ** ** ** ** ** ** *
 * I am checking the properties of projectors : W^i_{np}W^j_{qr} = W^i_{nr}\delta_{ij}\delta_{pq}
* ** ** ** ** ** ** ** ** ** *

i =  GM1 j =  GM1
     : beautiful~~~ [True]
i =  GM1 j =  GM2
     : beautiful~~~ [True]
i =  GM1 j =  GM3
     : beautiful~~~ [True]
i =  GM1 j =  GM4
     : beautiful~~~ [True]
i =  GM1 j =  GM5d
     : beautiful~~~ [True]
i =  GM1 j =  GM6d
     : beautiful~~~ [True]
i =  GM1 j =  GM7d
     : beautiful~~~ [True]
i =  GM1 j =  GM8d
     : beautiful~~~ [True]
i =  GM2 j =  GM1
     : beautiful~~~ [True]
i =  GM2 j =  GM2
     : beautiful~~~ [True]
i =  GM2 j =  GM3
     : beautiful~~~ [True]
i =  GM2 j =  GM4
     : beautiful~~~ [True]
i =  GM2 j =  GM5d
     : beautiful~~~ [True]
i =  GM2 j =  GM6d
     : beautiful~~~ [True]
i =  GM2 j =  GM7d
     : beautiful~~~ [True]
i =  GM2 j =  GM8d
     : beautiful~~~ [True]
i =  GM3 j =  GM1
     : beautiful~~~ [True]
i =  GM3 j =  GM2
     : beautiful~~~ [True]
i =  GM3 j =  GM3
     : beautiful~~~ [True]
i =  GM3 j =  GM4
     : beautiful~~~ [True]
i =  GM3 j =  GM5d
     : beautiful~~~ [True]
i =  GM3 j =  GM6d
     : beautiful~~~ [True]
i =  GM3 j =  GM7d
     : beautiful~~~ [True]
i =  GM3 j =  GM8d
     : beautiful~~~ [True]
i =  GM4 j =  GM1
     : beautiful~~~ [True]
i =  GM4 j =  GM2
     : beautiful~~~ [True]
i =  GM4 j =  GM3
     : beautiful~~~ [True]
i =  GM4 j =  GM4
     : beautiful~~~ [True]
i =  GM4 j =  GM5d
     : beautiful~~~ [True]
i =  GM4 j =  GM6d
     : beautiful~~~ [True]
i =  GM4 j =  GM7d
     : beautiful~~~ [True]
i =  GM4 j =  GM8d
     : beautiful~~~ [True]
i =  GM5d j =  GM1
     : beautiful~~~ [True]
i =  GM5d j =  GM2
     : beautiful~~~ [True]
i =  GM5d j =  GM3
     : beautiful~~~ [True]
i =  GM5d j =  GM4
     : beautiful~~~ [True]
i =  GM5d j =  GM5d
     : beautiful~~~ [True]
i =  GM5d j =  GM6d
     : beautiful~~~ [True]
i =  GM5d j =  GM7d
     : beautiful~~~ [True]
i =  GM5d j =  GM8d
     : beautiful~~~ [True]
i =  GM6d j =  GM1
     : beautiful~~~ [True]
i =  GM6d j =  GM2
     : beautiful~~~ [True]
i =  GM6d j =  GM3
     : beautiful~~~ [True]
i =  GM6d j =  GM4
     : beautiful~~~ [True]
i =  GM6d j =  GM5d
     : beautiful~~~ [True]
i =  GM6d j =  GM6d
     : beautiful~~~ [True]
i =  GM6d j =  GM7d
     : beautiful~~~ [True]
i =  GM6d j =  GM8d
     : beautiful~~~ [True]
i =  GM7d j =  GM1
     : beautiful~~~ [True]
i =  GM7d j =  GM2
     : beautiful~~~ [True]
i =  GM7d j =  GM3
     : beautiful~~~ [True]
i =  GM7d j =  GM4
     : beautiful~~~ [True]
i =  GM7d j =  GM5d
     : beautiful~~~ [True]
i =  GM7d j =  GM6d
     : beautiful~~~ [True]
i =  GM7d j =  GM7d
     : beautiful~~~ [True]
i =  GM7d j =  GM8d
     : beautiful~~~ [True]
i =  GM8d j =  GM1
     : beautiful~~~ [True]
i =  GM8d j =  GM2
     : beautiful~~~ [True]
i =  GM8d j =  GM3
     : beautiful~~~ [True]
i =  GM8d j =  GM4
     : beautiful~~~ [True]
i =  GM8d j =  GM5d
     : beautiful~~~ [True]
i =  GM8d j =  GM6d
     : beautiful~~~ [True]
i =  GM8d j =  GM7d
     : beautiful~~~ [True]
i =  GM8d j =  GM8d
     : beautiful~~~ [True]
****************************************

 * Check for bases of irreps 

****************************************
Check : the transformation matrix(basis matrix) in rows :
 [array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        +0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       1.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.70710678+0.j        ,
       0.        +0.j        , 0.        -0.70710678j,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        -0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j,
       0.+0.j, 0.+0.j]), array([0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 1.+0.j]), array([0.        +0.j        , 0.        +0.j        ,
       0.70710678+0.j        , 0.        +0.j        ,
       0.        +0.70710678j, 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ,
       0.        +0.j        , 0.        +0.j        ]), array([0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,
       0.+0.j, 0.+0.j])]
CHECK: the degeneracy of irreps :
      j = 0 deg= 3 logic: False label =  GM7d
      j = 1 deg= 3 logic: False label =  GM5d
      j = 2 deg= 2 logic: False label =  GM5d
      j = 3 deg= 2 logic: False label =  GM7d
      j = 4 deg= 3 logic: False label =  GM5d
      j = 5 deg= 3 logic: False label =  GM7d
      j = 6 deg= 2 logic: False label =  GM5d
      j = 7 deg= 2 logic: False label =  GM7d
      j = 8 deg= 3 logic: False label =  GM5d
      j = 9 deg= 3 logic: False label =  GM7d
 -------------------
 nmin-nmax:           1 ncfgs:           4
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           5
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           6
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           7
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           8
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:           9
 ORBth =            1 cnt_flag=           1
 
 
 -------------------
 nmin-nmax:           1 ncfgs:          10
 ORBth =            1 cnt_flag=           1
 
 
